{"version":3,"sources":["webpack:///./src/components/Count.js","webpack:///./src/pages/index.js"],"names":["Count","tag","length","css","Wrapper","data","location","posts","allMarkdownRemark","edges","countOfInitialPost","site","siteMetadata","configs","useCount","count","countRef","increaseCount","bottomRef","useRef","useState","filteredPosts","state","setState","tags","useMemo","result","map","node","frontmatter","i","j","splice","setFilteredPosts","useCallback","undefined","filter","post","includes","useInfiniteScroll","current","useEffect","href","queryString","parseUrl","query","Layout","title","Profile","CategoryMenu","TagSelector","onTagClick","navigate","slice","index","Post","key","ref"],"mappings":"0bAkBeA,EAfD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACpB,OACE,kBACEC,IAAG,GAOFF,EARH,IAQSC,EART,WCSEE,EAAO,iIAEE,sBAAyB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAAuBL,EAAKM,KAAKC,aAAaC,QAA9CH,mBACR,EAAyCI,YAAS,SAA3CC,EAAP,KAAcC,EAAd,KAAwBC,EAAxB,KACMC,EAAYC,mBAElB,EAA0BC,mBAAS,CACjCnB,IAAK,MACLoB,cAAed,IAFVe,EAAP,KAAcC,EAAd,KAKMC,EAAOC,mBAAQ,WACnB,IAAIC,EAAS,GACbnB,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAeF,EAAM,sBAAOA,GAAP,YAAkBE,EAAKC,YAAYL,UAClE,IAAK,IAAIM,EAAI,EAAGA,EAAIJ,EAAOxB,SAAU4B,EACnC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAIL,EAAOxB,SAAU6B,EACnCL,EAAOI,KAAOJ,EAAOK,IAAIL,EAAOM,OAAOD,IAAK,GAGpD,OAAOL,IACN,CAACnB,IAEE0B,EAAmBC,uBACvB,SAACjC,QACakC,IAARlC,IAAmBA,EAAMqB,EAAMrB,KAEjCsB,EADU,QAARtB,EACO,CACPA,IAAKA,EACLoB,cAAed,GAGR,CACPN,IAAKA,EACLoB,cAAed,EAAM6B,QAAO,SAACC,GAAD,OAC1BA,EAAKT,KAAKC,YAAYL,KAAKc,SAASrC,UAK5C,CAACM,EAAOe,EAAMrB,MAGhBsC,aAAkB,WACZhC,EAAML,OAASc,EAASwB,QAAU9B,IACpCO,IACAgB,OAEDf,GAkBH,OAXAuB,qBAAU,WACR,GAAInC,EAASoC,KAAM,CACjB,IACWzC,EACP0C,IAAYC,SAAStC,EAASoC,MADhCG,MAAS5C,IAEPA,GACFgC,EAAiBhC,MAGpB,CAACK,EAASoC,KAAMT,IAGjB,YAACa,EAAA,EAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC3C,EAAD,KACE,YAAC4C,EAAA,EAAD,OAEF,YAACC,EAAA,EAAD,MACA,YAAC7C,EAAD,KACE,YAAC,EAAD,CAAOH,IAAKqB,EAAMrB,IAAKC,OAAQoB,EAAMD,cAAcnB,SACnD,YAACgD,EAAA,EAAD,CAAa1B,KAAMA,EAAM2B,WAzBZ,SAAClD,GAClBmD,mBAAS,QAAQnD,GACjBgC,EAAiBhC,IAuBoCqB,MAAOA,IAEvDA,EAAMD,cACJgC,MAAM,EAAGtC,EAAQL,GACjBiB,KAAI,SAACU,EAAMiB,GACV,OAAO,YAACC,EAAA,EAAD,CAAMlB,KAAMA,EAAMmB,IAAG,QAAUF,QAG5C,mBAAKG,IAAKvC","file":"component---src-pages-index-js-600669132b6b3f775adc.js","sourcesContent":["import React from \"react\"\nimport tw, { css } from \"twin.macro\"\n\nconst Count = ({ tag, length }) => {\n  return (\n    <h2\n      css={css`\n        ${tw`text-4xl font-bold mx-3`}\n        @media screen and (max-width: 767px) {\n          ${tw`text-2xl`}\n        }\n      `}\n    >\n      {tag} {length} Posts\n    </h2>\n  )\n}\n\nexport default Count\n","import tw from \"twin.macro\"\nimport React, { useMemo, useState, useEffect, useCallback, useRef } from \"react\"\nimport SEO from \"../components/seo\"\nimport Profile from \"../components/Profile\"\nimport Post from \"../components/Post\"\nimport Layout from \"../components/Layout\"\nimport { graphql, navigate } from \"gatsby\"\nimport queryString from \"query-string\"\nimport TagSelector from \"../components/TagSelector\"\nimport useInfiniteScroll from \"../lib/hooks/useInfiniteScroll\"\nimport useCount from \"../lib/hooks/useCount\"\nimport CategoryMenu from \"../components/CategoryMenu\"\nimport Count from \"../components/Count\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md mx-auto`\n\nexport default ({ data, location }) => {\n  const posts = data.allMarkdownRemark.edges\n  const { countOfInitialPost } = data.site.siteMetadata.configs\n  const [count, countRef, increaseCount] = useCount(\"index\")\n  const bottomRef = useRef()\n\n  const [state, setState] = useState({\n    tag: \"ALL\",\n    filteredPosts: posts,\n  })\n\n  const tags = useMemo(() => {\n    var result = []\n    posts.map(({ node }) => (result = [...result, ...node.frontmatter.tags]))\n    for (var i = 0; i < result.length; ++i) {\n      for (var j = i + 1; j < result.length; ++j) {\n        if (result[i] === result[j]) result.splice(j--, 1)\n      }\n    }\n    return result\n  }, [posts])\n\n  const setFilteredPosts = useCallback(\n    (tag) => {\n      if (tag === undefined) tag = state.tag\n      if (tag === \"ALL\") {\n        setState({\n          tag: tag,\n          filteredPosts: posts,\n        })\n      } else {\n        setState({\n          tag: tag,\n          filteredPosts: posts.filter((post) =>\n            post.node.frontmatter.tags.includes(tag)\n          ),\n        })\n      }\n    },\n    [posts, state.tag]\n  )\n\n  useInfiniteScroll(() => {\n    if (posts.length > countRef.current * countOfInitialPost) {\n      increaseCount()\n      setFilteredPosts()\n    }\n  }, bottomRef)\n\n  const onTagClick = (tag) => {\n    navigate(`?tag=${tag}`)\n    setFilteredPosts(tag)\n  }\n\n  useEffect(() => {\n    if (location.href) {\n      const {\n        query: { tag },\n      } = queryString.parseUrl(location.href)\n      if (tag) {\n        setFilteredPosts(tag)\n      }\n    }\n  }, [location.href, setFilteredPosts])\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Wrapper>\n        <Profile />\n      </Wrapper>\n      <CategoryMenu />\n      <Wrapper>\n        <Count tag={state.tag} length={state.filteredPosts.length} />\n        <TagSelector tags={tags} onTagClick={onTagClick} state={state} />\n\n        {state.filteredPosts\n          .slice(0, count * countOfInitialPost)\n          .map((post, index) => {\n            return <Post post={post} key={`post_${index}`} />\n          })}\n      </Wrapper>\n      <div ref={bottomRef} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        configs {\n          countOfInitialPost\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 185, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY년 MM월 DD일\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}