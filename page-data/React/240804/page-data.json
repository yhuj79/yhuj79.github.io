{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/240804/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"웹 개발에서는 다양한 기기에 대응하는 화면을 제공하는 것 또한 중요하다. React에서 사용자의 기기 정보를 탐지하여 적절한 UI를 제공할 수 있는 라이브러리인 react-device-detect에 대해 다루어 보았다. react-device-detect란? 몇몇 사이트들은 모바일 접속을 한 경우 특정 창을 띄우거나, 모바일 버전이 개발되지 않았다면 제한…","html":"<blockquote>\n<p>웹 개발에서는 다양한 기기에 대응하는 화면을 제공하는 것 또한 중요하다. React에서 사용자의 기기 정보를 탐지하여 적절한 UI를 제공할 수 있는 라이브러리인 react-device-detect에 대해 다루어 보았다.</p>\n</blockquote>\n<h2 id=\"react-device-detect란\" style=\"position:relative;\"><a href=\"#react-device-detect%EB%9E%80\" aria-label=\"react device detect란 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react-device-detect란?</h2>\n<p>몇몇 사이트들은 모바일 접속을 한 경우 특정 창을 띄우거나, 모바일 버전이 개발되지 않았다면 제한을 거는 경우가 있다.</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"ex-1\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/ex-1.png\" width=\"49%\">\n    <img alt=\"ex-2\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/ex-2.png\" width=\"49%\">\n</div>\n<p>이러한 처리는 물론 반응형 디자인을 통해 적용할 수 있다. 하지만 반응형 디자인은 화면 크기, 해상도에 비례하여 작용하고, 디바이스를 구분하는 것은 아니다. (<a href=\"https://mong-blog.tistory.com/entry/CSS-PC%EC%99%80-Mobile%EC%9D%84-%EA%B5%AC%EB%B6%84%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" target=\"_blank\" rel=\"noopener noreferrer\">물론 조금 다른 방식으로 가능은 하다.</a>)</p>\n<p>react-device-detect는 사용자의 기기와 브라우저 정보를 확인하고, 이에 맞는 컴포넌트를 렌더링할 수 있게 해주는 라이브러리이다. 이 라이브러리는 모바일, 태블릿, 데스크탑 뿐만 아니라 특정 브라우저와 버전까지 탐지할 수 있다. 예를 들어, 특정 브라우저(Chrome, Safari 등)나 특정 운영체제(Android, iOS 등)를 대상으로 한 맞춤형 UI를 제공하는 데 유용하다.</p>\n<ul>\n<li>기기 탐지: 모바일, 태블릿, 데스크탑 등 다양한 기기를 구분할 수 있다.</li>\n<li>브라우저 탐지: Chrome, Safari, FireFox 등 특정 브라우저를 감지할 수 있다.</li>\n<li>운영체제 및 버전 탐지: Windows, MacOS, iOS, Android 등 다양한 운영체제 및 그 버전을 탐지할 수 있다.</li>\n</ul>\n<p>react-device-detect를 설치하고 샘플 코드를 작성해 보았다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ npm install react-device-detect</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">BrowserView</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">MobileView</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">isBrowser</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">isMobile</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react-device-detect&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">App</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">style</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">{ </span><span class=\"mtk4\">margin</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;30px&quot;</span><span class=\"mtk1\"> }</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk11\">BrowserView</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;Browser View&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;/</span><span class=\"mtk11\">BrowserView</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk11\">MobileView</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;Mobile View&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;/</span><span class=\"mtk11\">MobileView</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk4\">isBrowser</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;isBrowser&lt;/</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk4\">isMobile</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;isMobile&lt;/</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">default</span><span class=\"mtk1\"> </span><span class=\"mtk4\">App</span></span></span></code></pre>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"detect-1\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-1.png\" width=\"49%\">\n    <img alt=\"detect-2\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-2.png\" width=\"49%\">\n</div>\n<p>모바일 화면은 Chrome의 반응형 디자인 모드에서 확인하였다. 위 예제에서는 BrowserView와 MobileView 컴포넌트를 사용하여 브라우저와 모바일에서 각각 다른 내용을 보여준다. 또한, isBrowser와 isMobile을 사용하여 조건부 렌더링을 구현할 수 있다.</p>\n<h2 id=\"브라우저-구분\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B5%AC%EB%B6%84\" aria-label=\"브라우저 구분 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 구분</h2>\n<p>특정 브라우저나 기기에 대한 조건부 렌더링이 필요할 때는 CustomView와 condition을 사용하면 된다. 예를 들어, 특정 브라우저에서만 메시지를 보여주고 싶을 때 아래와 같이 구현할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">CustomView</span><span class=\"mtk1\">, </span><span class=\"mtk4\">browserName</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react-device-detect&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">App</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">style</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">{ </span><span class=\"mtk4\">margin</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;30px&quot;</span><span class=\"mtk1\"> }</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;React App&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk11\">CustomView</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">condition</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">browserName</span><span class=\"mtk1\"> </span><span class=\"mtk8\">===</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;Chrome&quot;</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;This is Chrome Browser.&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;/</span><span class=\"mtk11\">CustomView</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">default</span><span class=\"mtk1\"> </span><span class=\"mtk4\">App</span></span></span></code></pre>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"detect-3\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-3.png\" width=\"49%\">\n    <img alt=\"detect-4\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-4.png\" width=\"49%\">\n</div>\n<h2 id=\"활용-예제\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%A0%9C\" aria-label=\"활용 예제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 예제</h2>\n<p>예제로 모바일 기기에서 접속 시 \"PC에서 접속해주세요\"라는 메시지를 보여주는 페이지를 구현해 보았다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">isMobile</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react-device-detect&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">MobilePage</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">style</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">{ </span><span class=\"mtk4\">textAlgin</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;center&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">padding</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;20px&quot;</span><span class=\"mtk1\"> }</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;PC에서 접속해주세요&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;모바일에서 접근할 수 없는 페이지입니다.&lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">App</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">style</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">{ </span><span class=\"mtk4\">margin</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;30px&quot;</span><span class=\"mtk1\"> }</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk4\">isMobile</span><span class=\"mtk1\"> </span><span class=\"mtk9\">?</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk11\">MobilePage</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ) </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;React&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;사용자 인터페이스를 만들기 위한 JavaScript 라이브러리&lt;/</span><span class=\"mtk4\">h3</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            React (also known as React.js or ReactJS) is a free and open-source</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            front-end JavaScript library for building user interfaces based on</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            components by Facebook Inc. It is maintained by Meta (formerly</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            Facebook) and a community of individual developers and companies.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            React can be used to develop single-page, mobile, or server-rendered</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            applications with frameworks like Next.js. Because React is only</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            concerned with the user interface and rendering components to the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            DOM, React applications often rely on libraries for routing and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            other client-side functionality. A key advantage of React is that it</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            only rerenders those parts of the page that have changed, avoiding</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            unnecessary rerendering of unchanged DOM elements. It was first</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            launched on 29 May 2013.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          &lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      )</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">default</span><span class=\"mtk1\"> </span><span class=\"mtk4\">App</span></span></span></code></pre>\n<img alt=\"detect-5\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-5.png\">\n<img alt=\"detect-6\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240804/detect-6.png\">\n<p>위 예제에서는 isMobile 값을 사용하여 모바일 기기인지 여부를 확인하고, 모바일일 경우 MobilePage 컴포넌트를 렌더링한다. 이런 식으로 모바일 사용자가 PC로 사이트를 이용할 수 있도록 안내할 수 있다.</p>\n<p>react-device-detect는 다양한 기기 및 브라우저 감지를 통해 사용자에게 최적화된 경험을 제공하는 데 유용한 도구이다. 보통의 반응형 웹 디자인의 경우 CSS 미디어 쿼리나 UI 라이브러리에 내장된 디바이스 구분 기능을 사용하는 것이 더 적합할 수 있겠지만, 어떤 상황에서는 이 라이브러리를 사용하는 것도 좋은 방법인 것 같다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://www.npmjs.com/package/react-device-detect\" target=\"_blank\" rel=\"noopener noreferrer\">react-device-detect - npm</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/React_(JavaScript_library)\" target=\"_blank\" rel=\"noopener noreferrer\">React (JavaScript library) - Wikipedia</a></p>\n<p><a href=\"https://velog.io/@chaerin00/React-react-device-detect%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%AA%A8%EB%B0%94%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"noopener noreferrer\">[React] react-device-detect를 활용하여 모바일 페이지 구현하기</a></p>\n<p><a href=\"https://gofo-coding.tistory.com/entry/Reactjs-react-device-detect\" target=\"_blank\" rel=\"noopener noreferrer\">[React] react-device-detect</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/React/240804/#react-device-detect%EB%9E%80\">react-device-detect란?</a></li>\n<li><a href=\"/React/240804/#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B5%AC%EB%B6%84\">브라우저 구분</a></li>\n<li><a href=\"/React/240804/#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%A0%9C\">활용 예제</a></li>\n<li><a href=\"/React/240804/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2024년 08월 04일","title":"react-device-detect로 기기별 최적화된 화면 만들기","tags":["React","Optimization"]}}},"pageContext":{"slug":"/React/240804/","previous":{"fields":{"slug":"/React/240713/"},"frontmatter":{"title":"React로 360도 돌아가는 이미지 구현 (react-360-view)"}},"next":{"fields":{"slug":"/Typescript/240827/"},"frontmatter":{"title":"Typescript로 작성하는 디자인 패턴"}}}},"staticQueryHashes":["1081905842","3911196313"]}