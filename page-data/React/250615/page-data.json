{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/250615/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"Recoil은 Facebook에서 개발한 React를 위한 상태 관리 라이브러리이다. React의 Concurrent Renderer를 공식적으로 지원하는 유일한 상태 관리 라이브러리이며, React의 컨셉과 유사하게 설계되어 있어 사용법이 직관적이고 러닝 커브가 낮다는 장점이 있다. Recoil이란? Recoil은 React에서 전역상태를 관리하기 위한…","html":"<blockquote>\n<p>Recoil은 Facebook에서 개발한 React를 위한 상태 관리 라이브러리이다. React의 Concurrent Renderer를 공식적으로 지원하는 유일한 상태 관리 라이브러리이며, React의 컨셉과 유사하게 설계되어 있어 사용법이 직관적이고 러닝 커브가 낮다는 장점이 있다.</p>\n</blockquote>\n<h2 id=\"recoil이란\" style=\"position:relative;\"><a href=\"#recoil%EC%9D%B4%EB%9E%80\" aria-label=\"recoil이란 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recoil이란?</h2>\n<p>Recoil은 React에서 전역상태를 관리하기 위한 여러 라이브러리 중 하나이다. 기존 리액트 개발자라면 쉽게 사용이 가능하며, 공식문서에 따르면 Recoil을 사용하면 atoms(공유 상태)에서 selectors(순수 함수)를 거쳐 React 컴포넌트로 내려가는 data-flow graph를 만들 수 있다.</p>\n<blockquote>\n<p><strong>참고</strong>: Recoil 저장소는 2025-01-01부로 GitHub에서 아카이브 처리되어 더 이상 신규 기능이 추가되지 않는다고 한다. 안정적으로 동작은 하지만 장기 유지보수 측면에서 Zustand·Jotai·TanStack Store 등 대안도 있으니 검토할 필요가 있다.</p>\n</blockquote>\n<p>리액트에서 자식컴포넌트에서 부모(상위)컴포넌트의 state를 수정이 필요하면 부모(상위)컴포넌트에서 setState함수나, state를 변경하는 함수를 자식 컴포넌트에게 넘겨줘야 한다. 간단한 프로젝트의 경우는 상관이 없으나, 부모 자식관계의 깊이가 커질수록 위에 방식처럼 부모에서 자식으로 props로 넘겨줘야 한다(prop drilling). 이럴 경우에 전역상태 라이브러리를 사용하면 된다(Redux, Recoil, Mobx, Zustand...). Recoil은 Redux에 비해 간단하며, 비교적 보일러 플레이트 코드가 적다. 리액트를 사용한 개발자라면 쉽게 익힐수 있고, 러닝커브가 낮다.</p>\n<h2 id=\"atom\" style=\"position:relative;\"><a href=\"#atom\" aria-label=\"atom permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Atom</h2>\n<p>Atom은 Recoil의 기본 상태 단위이다. 컴포넌트에서 구독할 수 있는 공유 상태를 의미한다. Atom이 업데이트되면 해당 atom을 구독하고 있는 컴포넌트들이 리렌더링된다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">atom</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">countState</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;countState&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk5 mtki\">// 고유한 키</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">default</span><span class=\"mtk1\">: </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk5 mtki\">// 초기값</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>Atom을 사용하는 방법은 다음과 같다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useRecoilState</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">countState</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;./atoms&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">Counter</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk11\">count</span><span class=\"mtk1\">, </span><span class=\"mtk11\">setCount</span><span class=\"mtk1\">] </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRecoilState</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;Count: </span><span class=\"mtk9\">{</span><span class=\"mtk4\">count</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">button</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">onClick</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">setCount</span><span class=\"mtk1\">(</span><span class=\"mtk4\">count</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;Increment&lt;/</span><span class=\"mtk4\">button</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Atom의 상태를 읽기만 하거나 설정만 하고 싶을 때는 다음과 같은 훅을 사용할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// 값만 읽기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">count</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRecoilValue</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// 값만 설정하기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setCount</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useSetRecoilState</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"selector\" style=\"position:relative;\"><a href=\"#selector\" aria-label=\"selector permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selector</h2>\n<p>Selector는 다른 atom이나 selector의 값을 기반으로 계산된 파생 상태이다. Selector는 순수 함수로, 입력값이 같으면 항상 동일한 출력을 반환해야 한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">selector</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">countState</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;./atoms&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">doubleCountState</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;doubleCountState&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">get</span><span class=\"mtk1\">: ({</span><span class=\"mtk4 mtki\">get</span><span class=\"mtk1\">}) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">count</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">count</span><span class=\"mtk1\"> </span><span class=\"mtk8\">*</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<p>Selector는 읽기 전용이지만, set 속성을 추가하여 쓰기 기능을 구현할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">countState</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;countState&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">get</span><span class=\"mtk1\">: ({</span><span class=\"mtk4 mtki\">get</span><span class=\"mtk1\">}) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">count</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">count</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">set</span><span class=\"mtk1\">: ({</span><span class=\"mtk4 mtki\">set</span><span class=\"mtk1\">}, </span><span class=\"mtk4 mtki\">newValue</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">set</span><span class=\"mtk1\">(</span><span class=\"mtk4\">countState</span><span class=\"mtk1\">, </span><span class=\"mtk4\">newValue</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h2 id=\"selectorfamily\" style=\"position:relative;\"><a href=\"#selectorfamily\" aria-label=\"selectorfamily permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SelectorFamily</h2>\n<p>SelectorFamily는 파라미터를 받아 동적으로 selector를 생성할 수 있게 해주는 기능이다. 특히 API 호출 시 동적 파라미터가 필요한 경우 유용하다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">selectorFamily</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">userState</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">selectorFamily</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;userState&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">get</span><span class=\"mtk1\">: (</span><span class=\"mtk4 mtki\">userId</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk9\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">response</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fetch</span><span class=\"mtk1\">(</span><span class=\"mtk6\">`https://api.example.com/users/</span><span class=\"mtk9\">${</span><span class=\"mtk4\">userId</span><span class=\"mtk9\">}</span><span class=\"mtk6\">`</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">user</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">response</span><span class=\"mtk1\">.</span><span class=\"mtk3\">json</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h2 id=\"기본적인-비동기-처리\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC\" aria-label=\"기본적인 비동기 처리 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 비동기 처리</h2>\n<p>Recoil의 selector를 사용하여 비동기 데이터를 처리할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">selector</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">userState</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">selector</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;userState&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">get</span><span class=\"mtk1\">: </span><span class=\"mtk9\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">response</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fetch</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;https://api.example.com/user&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">user</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">response</span><span class=\"mtk1\">.</span><span class=\"mtk3\">json</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h2 id=\"suspense를-활용한-로딩-처리\" style=\"position:relative;\"><a href=\"#suspense%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%A1%9C%EB%94%A9-%EC%B2%98%EB%A6%AC\" aria-label=\"suspense를 활용한 로딩 처리 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Suspense를 활용한 로딩 처리</h2>\n<p>비동기 데이터를 사용할 때는 Suspense를 사용하여 로딩 상태를 처리할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">Suspense</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;react&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useRecoilValue</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">userState</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;./selectors&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UserProfile</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk11\">Suspense</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">fallback</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;Loading...&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk11\">UserInfo</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk11\">Suspense</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UserInfo</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">user</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRecoilValue</span><span class=\"mtk1\">(</span><span class=\"mtk4\">userState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">{</span><span class=\"mtk11\">user</span><span class=\"mtk1\">.</span><span class=\"mtk4\">name</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"userecoilvalueloadable\" style=\"position:relative;\"><a href=\"#userecoilvalueloadable\" aria-label=\"userecoilvalueloadable permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useRecoilValueLoadable</h2>\n<p>Suspense를 사용하지 않고 로딩 상태를 처리하고 싶다면 useRecoilValueLoadable을 사용할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useRecoilValueLoadable</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UserInfo</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">userLoadable</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRecoilValueLoadable</span><span class=\"mtk1\">(</span><span class=\"mtk4\">userState</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">switch</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">userLoadable</span><span class=\"mtk1\">.</span><span class=\"mtk4\">state</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;hasValue&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">{</span><span class=\"mtk11\">userLoadable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">contents</span><span class=\"mtk1\">.</span><span class=\"mtk4\">name</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;loading&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;Loading...&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">case</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;hasError&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;Error: </span><span class=\"mtk9\">{</span><span class=\"mtk11\">userLoadable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">contents</span><span class=\"mtk1\">.</span><span class=\"mtk4\">message</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"atom-effects\" style=\"position:relative;\"><a href=\"#atom-effects\" aria-label=\"atom effects permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Atom Effects</h2>\n<p>Atom Effects는 atom의 생명주기 동안 특정 동작을 수행할 수 있게 해주는 기능이다. 예를 들어, localStorage와 연동하여 상태를 유지할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">persistAtom</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">atom</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;persistAtom&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">default</span><span class=\"mtk1\">: </span><span class=\"mtk7\">null</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">effects</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ({</span><span class=\"mtk4 mtki\">setSelf</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">onSet</span><span class=\"mtk1\">}) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">savedValue</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">localStorage</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getItem</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;persistAtom&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">savedValue</span><span class=\"mtk1\"> </span><span class=\"mtk8\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">null</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">setSelf</span><span class=\"mtk1\">(</span><span class=\"mtk7\">JSON</span><span class=\"mtk1\">.</span><span class=\"mtk8\">parse</span><span class=\"mtk1\">(</span><span class=\"mtk4\">savedValue</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">onSet</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">newValue</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">localStorage</span><span class=\"mtk1\">.</span><span class=\"mtk3\">setItem</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;persistAtom&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">JSON</span><span class=\"mtk1\">.</span><span class=\"mtk8\">stringify</span><span class=\"mtk1\">(</span><span class=\"mtk4\">newValue</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h2 id=\"recoil-snapshot\" style=\"position:relative;\"><a href=\"#recoil-snapshot\" aria-label=\"recoil snapshot permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recoil Snapshot</h2>\n<p>Recoil Snapshot을 사용하면 상태의 스냅샷을 찍고, 이를 통해 상태를 시간에 따라 추적하거나 디버깅할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"jsx\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useRecoilSnapshot</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;recoil&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">DebugObserver</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">snapshot</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRecoilSnapshot</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">useEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;The following atoms were modified:&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">node</span><span class=\"mtk1\"> </span><span class=\"mtk9\">of</span><span class=\"mtk1\"> </span><span class=\"mtk11\">snapshot</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getNodes_UNSTABLE</span><span class=\"mtk1\">({</span><span class=\"mtk4\">isModified</span><span class=\"mtk1\">: </span><span class=\"mtk7\">true</span><span class=\"mtk1\">})) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk11\">node</span><span class=\"mtk1\">.</span><span class=\"mtk4\">key</span><span class=\"mtk1\">, </span><span class=\"mtk11\">snapshot</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getLoadable</span><span class=\"mtk1\">(</span><span class=\"mtk4\">node</span><span class=\"mtk1\">).</span><span class=\"mtk4\">contents</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }, [</span><span class=\"mtk4\">snapshot</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">null</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"recoil의-장점-한계점\" style=\"position:relative;\"><a href=\"#recoil%EC%9D%98-%EC%9E%A5%EC%A0%90-%ED%95%9C%EA%B3%84%EC%A0%90\" aria-label=\"recoil의 장점 한계점 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recoil의 장점, 한계점</h2>\n<p>Recoil의 장점을 정리해 보았다.</p>\n<ol>\n<li><strong>간단한 API</strong>: React의 useState와 유사한 API를 제공하여 쉽게 학습하고 사용할 수 있다.</li>\n<li><strong>성능 최적화</strong>: 상태 변경 시 변경된 부분만 렌더링하여 성능을 최적화한다.</li>\n<li><strong>React 친화적</strong>: React의 Hook과 유사한 API를 제공하여 React 개발자에게 친숙한 사용 경험을 제공한다.</li>\n<li><strong>비동기 처리 용이</strong>: selector를 통해 비동기 데이터 처리를 쉽게 구현할 수 있다.</li>\n<li><strong>Concurrent Mode 지원</strong>: React의 Concurrent Mode를 공식적으로 지원한다.</li>\n<li><strong>캐싱 기능</strong>: selector를 통한 비동기 데이터 처리는 자동으로 캐싱되어 성능을 최적화한다.</li>\n<li><strong>TypeScript 지원</strong>: TypeScript와의 통합이 잘 되어 있어 타입 안정성을 보장한다.</li>\n</ol>\n<p>하지만 Recoil은 아래와 같은 단점도 존재한다.</p>\n<ol>\n<li><strong>업데이트 중단</strong>: 위에서 다루었던 내용으로, 더 이상 새로운 기능이나 버그 수정이 이루어지지 않는다.</li>\n<li><strong>DevTools 부재</strong>: Redux DevTools와 같은 강력한 디버깅 도구가 아직 없다.</li>\n<li><strong>상태 관리의 복잡성</strong>: 대규모 애플리케이션에서는 상태 관리가 복잡해질 수 있다.</li>\n<li><strong>커뮤니티 크기</strong>: Redux에 비해 상대적으로 작은 커뮤니티를 가지고 있다.</li>\n</ol>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://recoiljs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Recoil</a></p>\n<p><a href=\"https://github.com/facebookexperimental/Recoil\" target=\"_blank\" rel=\"noopener noreferrer\">Recoil GitHub</a></p>\n<p><a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\" rel=\"noopener noreferrer\">Introducing Hooks – React</a></p>\n<p><a href=\"https://velog.io/@juno7803/Recoil-Recoil-200-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"noopener noreferrer\">[Recoil] Recoil 200% 활용하기</a></p>\n<p><a href=\"https://medium.com/humanscape-tech/recoil-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-285b29135d8e\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook에서 만든 React 상태 관리 라이브러리 Recoil에 대해 알아보기</a> </p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/React/250615/#recoil%EC%9D%B4%EB%9E%80\">Recoil이란?</a></li>\n<li><a href=\"/React/250615/#atom\">Atom</a></li>\n<li><a href=\"/React/250615/#selector\">Selector</a></li>\n<li><a href=\"/React/250615/#selectorfamily\">SelectorFamily</a></li>\n<li><a href=\"/React/250615/#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC\">기본적인 비동기 처리</a></li>\n<li><a href=\"/React/250615/#suspense%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%A1%9C%EB%94%A9-%EC%B2%98%EB%A6%AC\">Suspense를 활용한 로딩 처리</a></li>\n<li><a href=\"/React/250615/#userecoilvalueloadable\">useRecoilValueLoadable</a></li>\n<li><a href=\"/React/250615/#atom-effects\">Atom Effects</a></li>\n<li><a href=\"/React/250615/#recoil-snapshot\">Recoil Snapshot</a></li>\n<li><a href=\"/React/250615/#recoil%EC%9D%98-%EC%9E%A5%EC%A0%90-%ED%95%9C%EA%B3%84%EC%A0%90\">Recoil의 장점, 한계점</a></li>\n<li><a href=\"/React/250615/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2025년 06월 15일","title":"Recoil - React를 위한 상태 관리 라이브러리","tags":["React","State Management","Recoil"]}}},"pageContext":{"slug":"/React/250615/","previous":{"fields":{"slug":"/Algorithm/250416/"},"frontmatter":{"title":"백트래킹 알고리즘을 활용한 최적 경로 탐색"}},"next":null}},"staticQueryHashes":["1081905842","3911196313"]}