{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/221101/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"루프백 주소(Loopback Address)로 설정된 개발 서버를 다른 디바이스에서 테스트하고 싶을 경우 IPv4 주소:포트번호를 입력하여 접속하는 방법에 대하여 Loopback Address 개발을 하다 보면 자주 만나게 되는 127.0.0.1은 특수 목적을 지닌 IPv4 주소로,\n루프백 주소(Loopback Address)라고 한다. 자기 자신을 가리…","html":"<blockquote>\n<p>루프백 주소(Loopback Address)로 설정된 개발 서버를 다른 디바이스에서 테스트하고 싶을 경우 IPv4 주소:포트번호를 입력하여 접속하는 방법에 대하여</p>\n</blockquote>\n<h2>Loopback Address</h2>\n<p>개발을 하다 보면 자주 만나게 되는 <code>127.0.0.1</code>은 특수 목적을 지닌 IPv4 주소로,\n<strong>루프백 주소(Loopback Address)</strong>라고 한다. 자기 자신을 가리키기 위한 목적으로 쓰기 위해 예약된 IP 주소이기 때문에 패킷을 외부로 전송하지 않고, 자신이 송신한 패킷을 그대로 자신이 수신한다. 따라서 루프백 주소를 통해 다른 장치와 통신은 불가능하다. 또한 <code>localhost</code>는 <code>127.0.0.1</code>로 Redirect 설정이 되어 있기 때문에 <code>127.0.0.1:3000</code>과 같다.</p>\n<p><code>create-react-app</code>으로 생성한 앱은 <code>npm start</code>, <code>npx start</code>, <code>yarn start</code> 등의 명령어를 통해 <code>localhost:3000</code>에 프로젝트를 실행시킨다. 이 로컬 서버에서 실시간으로 코드 수정 사항을 확인할 수 있다. 다양한 디바이스 환경의 테스트 또한 Safari의 <strong>응답형 디자인 모드</strong>나 Chrome 개발자 도구 <strong>Toggle device Toolar</strong>로 가능하긴 하지만, 종종 다른 디바이스에서 직접 테스트를 해봐야 할 경우가 생긴다.</p>\n<h2>IPv4 주소 통해 접속하기</h2>\n<p>우선 이 방법은 개발 PC와 디바이스가 같은 네트워크 환경인 경우 사용이 가능하다. 먼저 터미널에서 <code>ipconfig</code>(mac은 <code>ipconfig getifaddr en0</code>)를 입력하여 IPv4 주소를 확인한다.</p>\n<pre><code class=\"language-bash\">$ ipconfig getifaddr en0\n\nxxx.xxx.xx.xx   # IPv4 주소\n</code></pre>\n<p>모바일 환경에서 접속을 시도한다면, 와이파이 연결을 확인한 후 <code>ip주소:포트번호</code>를 입력하여 접속한다.</p>\n<pre><code>xxx.xxx.xx.xx:3000\n</code></pre>\n<h2>명령어 변형</h2>\n<p>기존의 <code>yarn start</code>로 실행하는 것 이외에 <code>HOST=xxx.xxx.xx.xx yarn start</code>로 실행하면 localhost로 열리는 대신 바로 IPv4주소가 포함되어 앱이 실행된다. 애플 작업 환경일 경우 mac과 iPhone 연속성에 의해 주소를 바로 모바일에 붙여넣을 수 있어 이 방법이 더 편하다.</p>\n<p>아래처럼 package.json의 scripts를 수정하고 <code>yarn ipv4</code>로 실행할 수도 있다.</p>\n<pre><code class=\"language-json\">  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"ipv4\": \"HOST=xxx.xxx.xx.xx react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n</code></pre>\n<h2>Gatsby Develop</h2>\n<p><code>Gatsby</code>는 React 기반으로 만들어진 정적 사이트 생성 프레임워크로, React 이해도가 있다면 포트폴리오, 개인 블로그 등을 보다 편하게 개발할 수 있다. <code>gatsby develop</code> 명령어를 통해 개발 서버를 실행할 수 있는데, -H 옵션을 사용하여 실행하면 된다.</p>\n<pre><code class=\"language-bash\">$ gatsby develop -H xxx.xxx.xx.xx\n\nYou can now view gatsby-projectㅤin\nthe browser.\n⠀\n  http://xxx.xxx.xx.xx:8000/\n⠀\nView GraphiQL, an in-browser IDE, to\nexplore your site\\'s data and schema\n⠀\n  http://xxx.xxx.xx.xx:8000/___graphql\n⠀\nNote that the development build is not\noptimized.\nTo create a production build, use gatsby\nbuild\n⠀\nsuccess Building development bundle -\n2.730s\nsuccess Writing page-data.json files to\npublic directory - 0.035s - 3/3 84.59/s\n</code></pre>\n<hr>\n<h2>Reference</h2>\n<p><a href=\"https://woo-dev.tistory.com/190\" target=\"_blank\" rel=\"noopener noreferrer\">IP 주소 127.0.0.1 의 의미 - 루프백(loopback) or 로컬호스트(localhost) 주소</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Loopback\" target=\"_blank\" rel=\"noopener noreferrer\">Loopback - Wikipedia</a></p>\n<p><a href=\"https://velog.io/@lky9303/127.0.0.1-%EA%B3%BC-localhost%EC%9D%98-%EC%B0%A8%EC%9D%B4\" target=\"_blank\" rel=\"noopener noreferrer\">127.0.0.1 과 localhost의 차이</a></p>","tableOfContents":"<ul>\n<li><a href=\"/React/221101/#loopback-address\">Loopback Address</a></li>\n<li><a href=\"/React/221101/#ipv4-%EC%A3%BC%EC%86%8C-%ED%86%B5%ED%95%B4-%EC%A0%91%EC%86%8D%ED%95%98%EA%B8%B0\">IPv4 주소 통해 접속하기</a></li>\n<li><a href=\"/React/221101/#%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%B3%80%ED%98%95\">명령어 변형</a></li>\n<li><a href=\"/React/221101/#gatsby-develop\">Gatsby Develop</a></li>\n<li><a href=\"/React/221101/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2022년 11월 01일","title":"로컬 서버 외부에서 접속하기","tags":["React","Loopback"]}}},"pageContext":{"slug":"/React/221101/","previous":{"fields":{"slug":"/Jest/221022/"},"frontmatter":{"title":"테스팅 라이브러리 Jest 사용하기"}},"next":{"fields":{"slug":"/Jest/221129/"},"frontmatter":{"title":"Jest React 컴포넌트/스냅샷 테스트"}}}},"staticQueryHashes":["1081905842","3911196313"]}