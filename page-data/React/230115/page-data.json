{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/230115/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"지난 포스팅에서 작성했던 Express 서버를 Heroku에 배포해보려고 한다. > React에서 Open API XML 데이터 파싱하기 (with Express) Heroku Heroku는 여러 프로그래밍 언어를 지원하는 클라우드 PaaS로, 백엔드 서버를 이 플랫폼에 배포할 수 있다. 얼마 전 무료 서비스가 중단되었지만, 학생 개발자 프로그램으로 플랫…","html":"<blockquote>\n<p>지난 포스팅에서 작성했던 Express 서버를 Heroku에 배포해보려고 한다.<br /> > <a href=\"https://yhuj79.github.io/blog/230104\" target=\"_blank\">React에서 Open API XML 데이터 파싱하기 (with Express)</a></p>\n</blockquote>\n<h2>Heroku</h2>\n<p><strong>Heroku</strong>는 여러 프로그래밍 언어를 지원하는 클라우드 <a href=\"https://azure.microsoft.com/ko-kr/resources/cloud-computing-dictionary/what-is-paas\" target=\"_blank\">PaaS</a>로, 백엔드 서버를 이 플랫폼에 배포할 수 있다. 얼마 전 무료 서비스가 중단되었지만, 학생 개발자 프로그램으로 플랫폼 크레딧을 지급받을 수 있었다.</p>\n<p><a href=\"https://dashboard.heroku.com/apps\" target=\"_blank\">Heroku Dashboard</a></p>\n<p>우측 상단 NEW 버튼 > Create new app > 앱 이름 입력 > Create App</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-01.png\" alt=\"230115-01\"></p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-02.png\" alt=\"230115-02\"></p>\n<p>작성했던 server와의 연결에 앞서 server 디렉터리에 <code>Procfile</code>을 생성하고 다음과 같이 작성한다. Procfile을 읽은 헤로쿠가 <code>yarn dev</code>를 실행하고 yarn dev는 package.json에 작성해 두었던 <code>nodemon server.js</code>를 실행하게 되는 구조다.</p>\n<pre><code class=\"language-c\">// server/Procfile\nweb: yarn dev\n</code></pre>\n<p>터미널에서 Heroku를 설치한다. Mac을 사용중이기 때문에 <code>homebrew</code>로 설치하였다.</p>\n<pre><code class=\"language-bash\"># Mac\n$ brew install heroku/brew/heroku\n</code></pre>\n<p>윈도우의 경우 다음 URL에서 설치 파일을 다운로드 받을 수 있다.<br />\n<a href=\"https://devcenter.heroku.com/articles/heroku-cli#verify-your-installation\" target=\"_blank\">The Heroku CLI</a> <code>64-bit installer</code></p>\n<p>설치를 완료하면 <code>heroku version</code> 명령어로 확인해본다.</p>\n<p>그리고 Heroku 로그인 후, server 디렉터리에서 Heroku Server에 연결한다.</p>\n<pre><code class=\"language-bash\">$ heroku login\n\n# /server\n$ git init\n$ heroku git:remote -a open-api-tutorial\n</code></pre>\n<p>Heroku에 기존의 환경 변수를 전송하려면 <code>heroku-dotenv</code>를 설치해야 한다. 설치 후 push하면 <code>.env</code>의 <code>REACT_APP_API_KEY</code>가 온전하게 적용된다.</p>\n<pre><code class=\"language-bash\">$ yarn add heroku-dotenv\n$ heroku-dotenv push\n</code></pre>\n<p>이제 작성한 server의 코드를 <code>commit</code>, <code>push</code>하면 Heroku Deploy가 완료된다.</p>\n<pre><code class=\"language-bash\">$ git add .\n$ git commit -am \"heroku open-api-tutorial\"\n$ git push heroku master\n</code></pre>\n<p><code>https://open-api-tutorial.herokuapp.com/api/data</code>에서 데이터를 확인할 수 있다.<br>\n이렇게 재가공된 API가 만들어졌다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-03.png\" alt=\"230115-03\"></p>\n<p>이제 Heroku의 데이터를 받아서 콘솔에 출력한다.<br>\n다시 GitHub Page에 배포하고 확인해보면 문제없이 잘 작동하는 것을 볼 수 있다.</p>\n<pre><code class=\"language-javascript\">// src/App.js\n...\n...\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\n          `https://open-api-tutorial.herokuapp.com/api/data`\n        );\n        console.log(res.data.response.body.items.item);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n\n...\n...\n</code></pre>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-04.png\" alt=\"230115-04\"></p>\n<hr>\n<h2>References</h2>\n<p><a href=\"https://velog.io/@vvsogi/%EA%B3%B5%EA%B3%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-API-React%EC%97%90%EC%84%9C-XML%EC%97%90%EC%84%9C-JSON-%EB%B3%80%ED%99%98\" target=\"_blank\" rel=\"noopener noreferrer\">공공 데이터 API React에서 XML에서 JSON 변환!</a></p>\n<p><a href=\"https://medium.com/harrythegreat/node-js%EC%97%90%EC%84%9C-request-js-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-28744c52f68d\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js에서 Request.js 사용하기. 네트워크 더 간결하게 작성하자! | by Harry The Great | 해리의 유목코딩 | Medium</a></p>\n<p><a href=\"https://krpeppermint100.medium.com/devops-react-express-%EC%95%B1-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0-netlify-heroku-b238e057d920\" target=\"_blank\" rel=\"noopener noreferrer\">[TS]React,Express 풀스택 웹 앱 배포하기(Netlify, Heroku) | by PEPPERMINT100 | Medium</a></p>\n<p><a href=\"https://azure.microsoft.com/ko-kr/resources/cloud-computing-dictionary/what-is-paas\" target=\"_blank\" rel=\"noopener noreferrer\">PaaS란? Platform as a Service | Microsoft Azure</a></p>","tableOfContents":"<ul>\n<li><a href=\"/React/230115/#heroku\">Heroku</a></li>\n<li><a href=\"/React/230115/#references\">References</a></li>\n</ul>","frontmatter":{"date":"2023년 01월 15일","title":"Heroku에 Express 서버 배포하기","tags":["React","Express","Heroku"]}}},"pageContext":{"slug":"/React/230115/","previous":{"fields":{"slug":"/React/230104/"},"frontmatter":{"title":"React에서 Open API XML 데이터 파싱하기 (with Express)"}},"next":{"fields":{"slug":"/Javascript/230125/"},"frontmatter":{"title":"구조 분해 할당"}}}},"staticQueryHashes":["1081905842","3911196313"]}