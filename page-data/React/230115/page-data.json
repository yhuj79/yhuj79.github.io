{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/230115/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"지난 포스팅에서 작성했던 Express 서버를 Heroku에 배포해보려고 한다. > React에서 Open API XML 데이터 파싱하기 (with Express) Heroku Heroku는 여러 프로그래밍 언어를 지원하는 클라우드 PaaS로, 백엔드 서버를 이 플랫폼에 배포할 수 있다. 얼마 전 무료 서비스가 중단되었지만, 학생 개발자 프로그램으로 플랫…","html":"<blockquote>\n<p>지난 포스팅에서 작성했던 Express 서버를 Heroku에 배포해보려고 한다.<br /> > <a href=\"https://yhuj79.github.io/blog/230104\" target=\"_blank\">React에서 Open API XML 데이터 파싱하기 (with Express)</a></p>\n</blockquote>\n<h2 id=\"heroku\" style=\"position:relative;\"><a href=\"#heroku\" aria-label=\"heroku permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Heroku</h2>\n<p><strong>Heroku</strong>는 여러 프로그래밍 언어를 지원하는 클라우드 <a href=\"https://azure.microsoft.com/ko-kr/resources/cloud-computing-dictionary/what-is-paas\" target=\"_blank\">PaaS</a>로, 백엔드 서버를 이 플랫폼에 배포할 수 있다. 얼마 전 무료 서비스가 중단되었지만, 학생 개발자 프로그램으로 플랫폼 크레딧을 지급받을 수 있었다.</p>\n<p><a href=\"https://dashboard.heroku.com/apps\" target=\"_blank\">Heroku Dashboard</a></p>\n<p>우측 상단 NEW 버튼 > Create new app > 앱 이름 입력 > Create App</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-01.png\" alt=\"230115-01\"></p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-02.png\" alt=\"230115-02\"></p>\n<p>작성했던 server와의 연결에 앞서 server 디렉터리에 <code>Procfile</code>을 생성하고 다음과 같이 작성한다. Procfile을 읽은 헤로쿠가 <code>yarn dev</code>를 실행하고 yarn dev는 package.json에 작성해 두었던 <code>nodemon server.js</code>를 실행하게 되는 구조다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// server/Procfile</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">web: yarn dev</span></span></span></code></pre>\n<p>터미널에서 Heroku를 설치한다. Mac을 사용중이기 때문에 <code>homebrew</code>로 설치하였다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># Mac</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ brew install heroku/brew/heroku</span></span></span></code></pre>\n<p>윈도우의 경우 다음 URL에서 설치 파일을 다운로드 받을 수 있다.<br />\n<a href=\"https://devcenter.heroku.com/articles/heroku-cli#verify-your-installation\" target=\"_blank\">The Heroku CLI</a> <code>64-bit installer</code></p>\n<p>설치를 완료하면 <code>heroku version</code> 명령어로 확인해본다.</p>\n<p>그리고 Heroku 로그인 후, server 디렉터리에서 Heroku Server에 연결한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ heroku login</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># /server</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ git init</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ heroku git:remote -a open-api-tutorial</span></span></span></code></pre>\n<p>Heroku에 기존의 환경 변수를 전송하려면 <code>heroku-dotenv</code>를 설치해야 한다. 설치 후 push하면 <code>.env</code>의 <code>REACT_APP_API_KEY</code>가 온전하게 적용된다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add heroku-dotenv</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ heroku-dotenv push</span></span></span></code></pre>\n<p>이제 작성한 server의 코드를 <code>commit</code>, <code>push</code>하면 Heroku Deploy가 완료된다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ git add </span><span class=\"mtk8\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ git commit -am </span><span class=\"mtk6\">&quot;heroku open-api-tutorial&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ git push heroku master</span></span></span></code></pre>\n<p><code>https://open-api-tutorial.herokuapp.com/api/data</code>에서 데이터를 확인할 수 있다.<br>\n이렇게 재가공된 API가 만들어졌다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-03.png\" alt=\"230115-03\"></p>\n<p>이제 Heroku의 데이터를 받아서 콘솔에 출력한다.<br>\n다시 GitHub Page에 배포하고 확인해보면 문제없이 잘 작동하는 것을 볼 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// src/App.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">useEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fetchData</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">try</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">res</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">axios</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk6\">`https://open-api-tutorial.herokuapp.com/api/data`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk11\">res</span><span class=\"mtk1\">.</span><span class=\"mtk11\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">response</span><span class=\"mtk1\">.</span><span class=\"mtk11\">body</span><span class=\"mtk1\">.</span><span class=\"mtk11\">items</span><span class=\"mtk1\">.</span><span class=\"mtk4\">item</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      } </span><span class=\"mtk9\">catch</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">e</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">e</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">fetchData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }, []);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span></code></pre>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230115/230115-04.png\" alt=\"230115-04\"></p>\n<hr>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<p><a href=\"https://velog.io/@vvsogi/%EA%B3%B5%EA%B3%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-API-React%EC%97%90%EC%84%9C-XML%EC%97%90%EC%84%9C-JSON-%EB%B3%80%ED%99%98\">공공 데이터 API React에서 XML에서 JSON 변환!</a></p>\n<p><a href=\"https://medium.com/harrythegreat/node-js%EC%97%90%EC%84%9C-request-js-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-28744c52f68d\">Node.js에서 Request.js 사용하기. 네트워크 더 간결하게 작성하자! | by Harry The Great | 해리의 유목코딩 | Medium</a></p>\n<p><a href=\"https://krpeppermint100.medium.com/devops-react-express-%EC%95%B1-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0-netlify-heroku-b238e057d920\">[TS]React,Express 풀스택 웹 앱 배포하기(Netlify, Heroku) | by PEPPERMINT100 | Medium</a></p>\n<p><a href=\"https://azure.microsoft.com/ko-kr/resources/cloud-computing-dictionary/what-is-paas\">PaaS란? Platform as a Service | Microsoft Azure</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/React/230115/#heroku\">Heroku</a></li>\n<li><a href=\"/React/230115/#references\">References</a></li>\n</ul>","frontmatter":{"date":"2023년 01월 15일","title":"Heroku에 Express 서버 배포하기","tags":["React","Express","Heroku"]}}},"pageContext":{"slug":"/React/230115/","previous":{"fields":{"slug":"/React/230104/"},"frontmatter":{"title":"React에서 Open API XML 데이터 파싱하기 (with Express)"}},"next":{"fields":{"slug":"/Javascript/230125/"},"frontmatter":{"title":"구조 분해 할당"}}}},"staticQueryHashes":["1081905842","3911196313"]}