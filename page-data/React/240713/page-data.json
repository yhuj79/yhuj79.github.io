{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/240713/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"360도 회전하는 이미지를 볼 수 있고, 더 나아가 드래그 이벤트를 통해 그 물체를 조작해 볼 수 있는 기능은 다양한 웹사이트에서 사용되고 있다. 주로 자동차, 신발, 시계 등의 상품을 관찰할 수 있게 서비스하는 경우가 많다. 이 포스트는 360 뷰어를 구현할 수 있는 다양한 방법 중 react-360-view 라이브러리를 통해 구현하는 법과 오류 방지 …","html":"<blockquote>\n<p>360도 회전하는 이미지를 볼 수 있고, 더 나아가 드래그 이벤트를 통해 그 물체를 조작해 볼 수 있는 기능은 다양한 웹사이트에서 사용되고 있다. 주로 자동차, 신발, 시계 등의 상품을 관찰할 수 있게 서비스하는 경우가 많다. 이 포스트는 360 뷰어를 구현할 수 있는 다양한 방법 중 react-360-view 라이브러리를 통해 구현하는 법과 오류 방지 팁, 한계점에 대해 다룬다.</p>\n</blockquote>\n<h2>react-360-view</h2>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"360viewer1\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer1.gif\" width=\"49%\">\n    <img alt=\"360viewer2\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer2.gif\" width=\"49%\">\n</div>\n<p>물체에 회전 효과를 주기 위해선 어떤 방법을 사용해야 할까? 자체적으로 3D 프로그램을 통해 개발을 할 수도 있겠지만, 가벼운 프로젝트나 중,소 규모 웹사이트에 적용하기에는 다소 어려워 보인다.</p>\n<p>간단하게 생각해 보면 다른 각도를 지닌 사진 여러 장을 부드럽게 전환하는 것도 좋은 방법이다.</p>\n<div style=\"display: flex; flex-wrap: wrap;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-1.webp\" alt=\"car-1\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-2.webp\" alt=\"car-2\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-3.webp\" alt=\"car-3\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-4.webp\" alt=\"car-4\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-5.webp\" alt=\"car-5\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-6.webp\" alt=\"car-6\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-7.webp\" alt=\"car-7\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-8.webp\" alt=\"car-8\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-9.webp\" alt=\"car-9\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-10.webp\" alt=\"car-10\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-11.webp\" alt=\"car-11\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-12.webp\" alt=\"car-12\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-13.webp\" alt=\"car-13\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-14.webp\" alt=\"car-14\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-15.webp\" alt=\"car-15\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-16.webp\" alt=\"car-16\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-17.webp\" alt=\"car-17\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-18.webp\" alt=\"car-18\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-19.webp\" alt=\"car-19\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-20.webp\" alt=\"car-20\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-21.webp\" alt=\"car-21\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-22.webp\" alt=\"car-22\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-23.webp\" alt=\"car-23\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-24.webp\" alt=\"car-24\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-25.webp\" alt=\"car-25\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-26.webp\" alt=\"car-26\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-27.webp\" alt=\"car-27\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-28.webp\" alt=\"car-28\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-29.webp\" alt=\"car-29\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-30.webp\" alt=\"car-30\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-31.webp\" alt=\"car-31\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-32.webp\" alt=\"car-32\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-33.webp\" alt=\"car-33\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-34.webp\" alt=\"car-34\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-35.webp\" alt=\"car-35\" style=\"width: 16.66%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car/car-36.webp\" alt=\"car-36\" style=\"width: 16.66%;\">\n</div>\n<p>위처럼 여러 각도를 가진 이미지들이 있고, 이를 부드럽게 전환시킨다면 해당 물체가 360도로 돌아가는 느낌을 줄 수 있다.</p>\n<p>라이브러리를 사용하지 않고 드래그 이벤트 처리를 통해 마우스 이동 방향에 따라 이미지 값을 바꾸어 가는 방식으로 개발을 할 수도 있지만, <code>react-360-view</code> 라이브러리를 사용하면 복잡한 코드를 작성하지 않고 간단하게 구현해낼 수 있다. (그만큼 존재하는 단점에 대해서는 포스트 뒷 부분에)</p>\n<img alt=\"img-list\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/img-list.png\" width=\"30%\">\n<p>각도 변화에 따른 여러 이미지가 준비되어 있어야 한다. 구현에는 GitHub에 업로드한 차량 이미지를 사용해 보았다.</p>\n<pre><code class=\"language-bash\">$ npx create-react-app react360view\n$ cd react360view\n$ npm start\n</code></pre>\n<p>먼저 React를 설치한다.</p>\n<pre><code class=\"language-bash\">$ npm install react-360-view\n</code></pre>\n<p>react-360-view 라이브러리를 설치한다.</p>\n<pre><code class=\"language-javascript\">// App.js\nimport ThreeSixty from \"react-360-view\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    &#x3C;div>\n      &#x3C;div\n        style={{\n          width: \"40%\",\n          alignItems: \"center\",\n          border: \"2px solid black\",\n          margin: \"30px auto\",\n          position: \"relative\",\n        }}\n      >\n        &#x3C;ThreeSixty\n          amount={36}\n          imagePath=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/car\"\n          fileName=\"car-{index}.webp\"\n          spinReverse\n        />\n      &#x3C;/div>\n    &#x3C;/div>\n  )\n}\n\nexport default App\n</code></pre>\n<pre><code class=\"language-css\">/* App.css */\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css\");\n</code></pre>\n<p>App.js와 App.css의 내용을 위와 같이 수정했다. 여기서 css는 라이브러리의 아이콘이 fontawesome을 사용하기 때문에 적용되었다.</p>\n<p>ThreeSixty 속성을 살펴보면 amount가 있는데, 뷰어에 적용될 총 이미지 수를 넣으면 된다. 이미지 수가 많아질수록 미세한 각도까지 표현되면서 더 부드러워질 것이다. imagePath에는 도메인을, fileName에는 이미지 이름과 형식을 적었다. 이 부분이 중요한데, {index}를 통해 이미지 순서에 따라 구현이 된다. 사용한 이미지가 car-1, car-2, car-3 ... 의 패턴이기 때문에 car-{index}.webp 로 작성하였다.</p>\n<img alt=\"360viewer3\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer3.gif\">\n<p>이미지가 부드럽게 돌아간다. 드래그에 따른 반응 또한 문제 없이 잘 이루어진다.</p>\n<p>다른 느낌을 보기 위해 <a href=\"https://www.google.com/intl/ko_ALL/earth\" target=\"_blank\" rel=\"noopener noreferrer\">Google Earth</a> 에서 캡쳐한 지구로 다시 테스트해 보았다.</p>\n<div style=\"display: flex; flex-wrap: wrap;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-1.png\" alt=\"earth-1\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-2.png\" alt=\"earth-2\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-3.png\" alt=\"earth-3\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-4.png\" alt=\"earth-4\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-5.png\" alt=\"earth-5\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-6.png\" alt=\"earth-6\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-7.png\" alt=\"earth-7\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-8.png\" alt=\"earth-8\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-9.png\" alt=\"earth-9\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-10.png\" alt=\"earth-10\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-11.png\" alt=\"earth-11\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-12.png\" alt=\"earth-12\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-13.png\" alt=\"earth-13\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-14.png\" alt=\"earth-14\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-15.png\" alt=\"earth-15\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-16.png\" alt=\"earth-16\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-17.png\" alt=\"earth-17\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-18.png\" alt=\"earth-18\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-19.png\" alt=\"earth-19\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-20.png\" alt=\"earth-20\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-21.png\" alt=\"earth-21\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-22.png\" alt=\"earth-22\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-23.png\" alt=\"earth-23\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-24.png\" alt=\"earth-24\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-25.png\" alt=\"earth-25\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-26.png\" alt=\"earth-26\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-27.png\" alt=\"earth-27\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-28.png\" alt=\"earth-28\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-29.png\" alt=\"earth-29\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-30.png\" alt=\"earth-30\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-31.png\" alt=\"earth-31\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-32.png\" alt=\"earth-32\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-33.png\" alt=\"earth-33\" style=\"width: 11.11%;\">\n    <img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth/earth-34.png\" alt=\"earth-34\" style=\"width: 11.11%;\">\n</div>\n<br>\n<img alt=\"360viewer4\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer4.gif\">\n<p>지구가 열심히 돌아간다.</p>\n<p>이 이상으로는 GIF 프레임의 한계 때문에 느낌이 전달되지 않기 때문에 react-360-view에 대해 궁금하거나 관련 기능을 필요로 하고 있다면, 이미지를 구해 실제로 테스트를 해보는 것을 추천한다.</p>\n<h2>스크롤 시 오류 방지</h2>\n<p>react-360-view 라이브러리는 회전 뿐만 아니라 이미지의 확대, 축소 기능도 제공한다. 위에서 다룬 지구를 예로 들자면, Google Earth만큼 좋은 화질은 아니겠지만 원하는 부분을 확대해볼 수 있다.</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"360viewer-zoom1\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer-zoom1.gif\" width=\"49%\">\n    <img alt=\"360viewer-zoom2\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/360viewer-zoom2.gif\" width=\"49%\">\n</div>\n<p>하지만 프로젝트에 적용할 때 한 가지 문제가 발생한다. 이미지 위에 마우스가 위치할 때 확대 및 축소가 발생할 텐데, 웹페이지의 다른 부분에서부터 스크롤을 진행하다가 뷰어 위에 마우스가 위치하게 된다면 의도치 않게 확대, 축소가 작동할 가능성이 있다.</p>\n<p>확대와 축소는 이미지 아래 툴 박스를 이용하면 충분하다. 그래서 오류 방지를 위해 wheel event 발생을 차단하는 코드를 추가해 보았다.</p>\n<pre><code class=\"language-javascript\">import { useEffect } from \"react\"\nimport ThreeSixty from \"react-360-view\"\nimport \"./App.css\"\n\nfunction App() {\n  // 스크롤 시 의도치 않게 특정 요소가 확대, 축소되는 현상 방지\n  useEffect(() => {\n    const element = document.getElementById(\"container-viewer\")\n\n    if (element) {\n      const handleWheel = (event) => {\n        event.stopPropagation()\n      }\n\n      // wheel event가 다른 요소로 전파되기 전에 stopPropagation에 의해 중단\n      element.addEventListener(\"wheel\", handleWheel)\n\n      // 언마운트 될 때, wheel event listener 제거\n      return () => {\n        element.removeEventListener(\"wheel\", handleWheel)\n      }\n    }\n  }, [])\n\n  return (\n    &#x3C;div>\n      &#x3C;div\n        id=\"container-viewer\"\n        style={{\n          width: \"40%\",\n          alignItems: \"center\",\n          border: \"2px solid black\",\n          margin: \"30px auto\",\n          position: \"relative\",\n        }}\n      >\n        &#x3C;ThreeSixty\n          amount={34}\n          imagePath=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240713/earth\"\n          fileName=\"earth-{index}.png\"\n          spinReverse\n        />\n      &#x3C;/div>\n    &#x3C;/div>\n  )\n}\n\nexport default App\n</code></pre>\n<p>div에 container-viewer라는 id를 부여하여 관리한다. 이벤트 리스너를 통해 wheel event를 제어함으로써 해당 컨테이너는 스크롤이 더이상 작동하지 않게 되었다.</p>\n<h2>한계점</h2>\n<p>지금까지 다룬 부분에 대해서만 다룰 것이라면, 이 라이브러리는 기능적으로 충분하다.</p>\n<p>하지만 좀 더 깊이 다루고자 한다면 막히는 부분이 생긴다. 예시를 몇 개 들어보자면...</p>\n<ol>\n<li>amount가 많고 고화질인 이미지의 로딩 문제</li>\n<li>이미지 교체가 필요할 때 (ex: 자동차의 타이어, 자동차의 색상, 신발 끈 색상 등)</li>\n</ol>\n<p>1번 예시처럼 로딩 문제가 발생할 경우 <a href=\"https://yhuj79.github.io/React/240608\" target=\"_blank\" rel=\"noopener noreferrer\">Pre Loading</a> 과 같은 이미지 처리가 필요할 것이고, 2번의 경우 직접 드래그 이벤트를 작성하면서 뷰어를 처음부터 개발해 나가야 할 것이다. Vanilla Javascript로 코드를 작성한다면 throttle 도달 수치를 조정하여 드래그 감도를 조절하고, 자동차의 색상이나 타이어를 교체할 수 있게 추가적인 커스터마이징도 충분히 가능할 것이다. 대신 그만큼 필요한 이미지의 수 또한 늘어날 것이다.</p>\n<hr>\n<h2>Reference</h2>\n<p><a href=\"https://www.npmjs.com/package/react-360-view\" target=\"_blank\" rel=\"noopener noreferrer\">react-360-view - npm</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=CmxVQ7XV9WE&#x26;ab_channel=CodeWithYd\" target=\"_blank\" rel=\"noopener noreferrer\">360 degrees Product Viewer in React js - Code With Yd</a></p>\n<p><a href=\"https://studio3.com/gifs-and-spins/\" target=\"_blank\" rel=\"noopener noreferrer\">GIFs and Spins: Making your Product Come to Life</a></p>\n<p><a href=\"https://www.mercedes-benz.com.au/passengercars/configurator.html?group=all&#x26;subgroup=see-all&#x26;view=BODYTYPE\" target=\"_blank\" rel=\"noopener noreferrer\">Configurator | Mercedes-Benz</a></p>\n<p><a href=\"https://www.google.com/intl/ko_ALL/earth\" target=\"_blank\" rel=\"noopener noreferrer\">Google Earth</a></p>","tableOfContents":"<ul>\n<li><a href=\"/React/240713/#react-360-view\">react-360-view</a></li>\n<li><a href=\"/React/240713/#%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%8B%9C-%EC%98%A4%EB%A5%98-%EB%B0%A9%EC%A7%80\">스크롤 시 오류 방지</a></li>\n<li><a href=\"/React/240713/#%ED%95%9C%EA%B3%84%EC%A0%90\">한계점</a></li>\n<li><a href=\"/React/240713/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2024년 07월 13일","title":"React로 360도 돌아가는 이미지 구현 (react-360-view)","tags":["React","Javascript","3D","Image"]}}},"pageContext":{"slug":"/React/240713/","previous":{"fields":{"slug":"/Algorithm/240624/"},"frontmatter":{"title":"NP-난해와 NP-완전의 혼용"}},"next":{"fields":{"slug":"/React/240804/"},"frontmatter":{"title":"react-device-detect로 기기별 최적화된 화면 만들기"}}}},"staticQueryHashes":["1081905842","3911196313"]}