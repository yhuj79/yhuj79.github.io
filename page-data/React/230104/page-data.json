{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/230104/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"React 환경에서 XML로 구성된 공공데이터포털 API를 Express 서버로 파싱하기 XML 형식의 Open API 예전 프로젝트에서 공공데이터포털에 있는 XML(Extensible Markup Language) 형식의 API를 다룬 적이 있다. 데이터를 이용하여 원하는 형태로 구현하는 것 까지는 문제가 없었지만, GitHub Page, Vercel …","html":"<blockquote>\n<p>React 환경에서 XML로 구성된 공공데이터포털 API를 Express 서버로 파싱하기</p>\n</blockquote>\n<h2 id=\"xml-형식의-open-api\" style=\"position:relative;\"><a href=\"#xml-%ED%98%95%EC%8B%9D%EC%9D%98-open-api\" aria-label=\"xml 형식의 open api permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML 형식의 Open API</h2>\n<p>예전 프로젝트에서 <a href=\"https://www.data.go.kr\" target=\"_blank\">공공데이터포털</a>에 있는 <strong>XML(Extensible Markup Language)</strong> 형식의 API를 다룬 적이 있다. 데이터를 이용하여 원하는 형태로 구현하는 것 까지는 문제가 없었지만, <strong>GitHub Page</strong>, <strong>Vercel</strong> 등으로 프로젝트를 배포했을 경우 갖가지 문제에 부딪혔다. 특히 공공데이터포털에서 제공하는 API는 대다수가 XML 형식으로 되어 있다. 이 문제의 해결법은 아래에 설명해 놓은 방법만이 정답인 것은 아니겠지만 비교적 괜찮은 방법으로 성공한 것 같다.</p>\n<p><strong>GitHub</strong>에 새 저장소를 만들고, 생성한 저장소를 클론 후 <code>react-app</code>을 만들었다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-01.png\" alt=\"230104-01\"></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ git clone https://github.com/(github-id)/open-api-tutorial.git</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ </span><span class=\"mtk8\">cd</span><span class=\"mtk1\"> open-api-tutorial</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn create react-app open-api-tutorial</span></span></span></code></pre>\n<p>생성한 react-app에서 <code>axios</code>를 설치한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ </span><span class=\"mtk8\">cd</span><span class=\"mtk1\"> open-api-tutorial</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add axios</span></span></span></code></pre>\n<p>공공데이터포털에서 제공하는 국내 코로나 바이러스 현황을 받아볼 수 있는 API를 사용하였다.<br>\n<a href=\"https://www.data.go.kr/bbs/ntc/selectNotice.do?originId=NOTICE_0000000002849\" target=\"_blank\">공공데이터활용지원센터_보건복지부 코로나19 감염 현황 (현재 폐기됨)</a></p>\n<p><strong>XML</strong>은 <strong>Extensible Markup Language</strong> 의 약자로, HTML과 비슷한 구조를 가진다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-02.png\" alt=\"230104-02\"></p>\n<p>App.js에서 데이터를 콘솔에 출력하였다. 이 API는 <strong>startCreateDt</strong>, <strong>endCreateDt</strong> 파라미터로 데이터 범위를 지정할 수 있는데, <code>Moment.js</code>, <code>Day.js</code>와 같은 라이브러리를 사용하면 현재 날짜를 받아서 원하는 기간의 데이터를 받아볼 수 있다. 우선 테스트를 위해 날짜 라이브러리는 사용하지 않고 임의의 날짜를 입력해 주었다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// src/App.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">logo</span><span class=\"mtk1\"> </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./logo.svg&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./App.css&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useEffect</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">axios</span><span class=\"mtk1\"> </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;axios&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">App</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">useEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fetchData</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">try</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">res</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">axios</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk6\">`http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=</span><span class=\"mtk9\">${</span><span class=\"mtk4\">process</span><span class=\"mtk1\">.</span><span class=\"mtk7\">env</span><span class=\"mtk1\">.</span><span class=\"mtk4\">REACT_APP_API_KEY</span><span class=\"mtk9\">}</span><span class=\"mtk6\">&amp;pageNo=1&amp;numOfRows=10&amp;startCreateDt=20221212&amp;endCreateDt=20230103`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk11\">res</span><span class=\"mtk1\">.</span><span class=\"mtk11\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">response</span><span class=\"mtk1\">.</span><span class=\"mtk11\">body</span><span class=\"mtk1\">.</span><span class=\"mtk11\">items</span><span class=\"mtk1\">.</span><span class=\"mtk4\">item</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      } </span><span class=\"mtk9\">catch</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">e</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">e</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">fetchData</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }, [])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">className</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;App&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">header</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">className</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;App-header&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">img</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">src</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">logo</span><span class=\"mtk9\">}</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">className</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;App-logo&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">alt</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;logo&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          Edit &lt;</span><span class=\"mtk4\">code</span><span class=\"mtk1\">&gt;src/App.js&lt;/</span><span class=\"mtk4\">code</span><span class=\"mtk1\">&gt; and save to reload.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk4\">a</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">className</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;App-link&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">href</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;https://reactjs.org&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">target</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;_blank&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">rel</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;noopener noreferrer&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          Learn React</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;/</span><span class=\"mtk4\">a</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;/</span><span class=\"mtk4\">header</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">default</span><span class=\"mtk1\"> </span><span class=\"mtk4\">App</span></span></span></code></pre>\n<p>react-app에 <code>.env</code>파일을 생성하고 다음과 같이 API KEY를 입력한다. GitHub에 <code>.env</code>파일이 올라가지 않게 <code>.gitignore</code>에 .env도 추가한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># .env</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">REACT_APP_API_KEY=APIKEY입력하는곳</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># .gitignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.env</span></span></span></code></pre>\n<p><code>yarn start</code>로 실행시켜 확인하면 다음과 같이 지정한 범위의 코로나 데이터를 확인할 수 있다.<br>\n(콘솔에 두 번 출력되는 이유는 React의 <strong>StrictMode</strong> 때문이다.)</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-03.png\" alt=\"230104-03\"></p>\n<p>작성한 그대로 <strong>GitHub Page</strong>에 배포하여 확인해 보자. <code>gh-pages</code>를 설치한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add --dev gh-pages</span></span></span></code></pre>\n<p><code>package.json</code> 내용을 추가 후, <code>build</code>, <code>deploy</code>를 하고 나면<br>\n<code>https://(github-id).github.io/open-api-tutorial</code>에서 페이지를 확인할 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"json\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// package.json scripts에 추가</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">&quot;predeploy&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;yarn build&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">&quot;deploy&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;gh-pages -d build&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// package.json에 따로 추가</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">&quot;homepage&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;https://(github-id).github.io/open-api-tutorial&quot;</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn build</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn deploy</span></span></span></code></pre>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-04.png\" alt=\"230104-04\"></p>\n<p>페이지는 잘 나타났으나 데이터에서 <code>Mixed Content Error</code>가 발생한다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-05.png\" alt=\"230104-05\"></p>\n<p>암호화된 HTTPS 페이지에 암호화되지 않은 HTTP를 통해 요청할 때 발생하는 에러라고 한다.<br>\npublic/index.html에 HTTPS 변환 메타태그를 추가 후 다시 확인해 보면...</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"html\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">meta</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">http-equiv</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;Content-Security-Policy&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">content</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;upgrade-insecure-requests&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">/&gt;</span></span></span></code></pre>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-06.png\" alt=\"230104-06\"></p>\n<p><code>ERR_CERT_COMMON_NAME_INVALID</code> 에러가 등장했다. SSL 인증서 관련 문제라고 한다. 이 프로젝트에서는 HTTPS 변환된 API가 존재하지 않아 에러가 발생했다는 뜻으로 보여진다.</p>\n<p>따라서 다른 방법으로 구상한 게 웹 서버에 데이터를 파싱 후 웹 앱에 뿌리는 것이다.</p>\n<h2 id=\"express-web-server\" style=\"position:relative;\"><a href=\"#express-web-server\" aria-label=\"express web server permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Express Web Server</h2>\n<p>프로젝트 디렉터리에 server 디렉터리를 만들고 다음 라이브러리들을 설치했다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add express  </span><span class=\"mtk5 mtki\"># Node.js 서버 프레임워크</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add request  </span><span class=\"mtk5 mtki\"># HTTP 네트워크 요청</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add xml-js   </span><span class=\"mtk5 mtki\"># XML JSON 변환</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add cors     </span><span class=\"mtk5 mtki\"># Node.js CORS middleware</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add dotenv   </span><span class=\"mtk5 mtki\"># Node.js에서 환경변수 사용</span></span></span></code></pre>\n<p>server.js와 환경 변수 파일을 작성한다. react-app처럼 <code>.gitignore</code>을 만들고 <code>node_modules</code> , <code>.env</code>를 추가한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// server/server.js</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">require</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;dotenv&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk3\">config</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">express</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk8\">require</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;express&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">app</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">express</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">cors</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk8\">require</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;cors&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">request</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk8\">require</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;request&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convert</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk8\">require</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;xml-js&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PORT</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">process</span><span class=\"mtk1\">.</span><span class=\"mtk7\">env</span><span class=\"mtk1\">.</span><span class=\"mtk4\">PORT</span><span class=\"mtk1\"> </span><span class=\"mtk8\">||</span><span class=\"mtk1\"> </span><span class=\"mtk7\">5000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">app</span><span class=\"mtk1\">.</span><span class=\"mtk3\">use</span><span class=\"mtk1\">(</span><span class=\"mtk3\">cors</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">app</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;/api/data&quot;</span><span class=\"mtk1\">, (</span><span class=\"mtk4 mtki\">req</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">res</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">request</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">url</span><span class=\"mtk1\">: </span><span class=\"mtk6\">`http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=</span><span class=\"mtk9\">${</span><span class=\"mtk4\">process</span><span class=\"mtk1\">.</span><span class=\"mtk7\">env</span><span class=\"mtk1\">.</span><span class=\"mtk4\">REACT_APP_API_KEY</span><span class=\"mtk9\">}</span><span class=\"mtk6\">&amp;pageNo=1&amp;numOfRows=10&amp;startCreateDt=20221212&amp;endCreateDt=20230103`</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">method</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;GET&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk4 mtki\">error</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">response</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">body</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">xmlToJson</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">convert</span><span class=\"mtk1\">.</span><span class=\"mtk3\">xml2json</span><span class=\"mtk1\">(</span><span class=\"mtk4\">body</span><span class=\"mtk1\">, { </span><span class=\"mtk4\">compact</span><span class=\"mtk1\">: </span><span class=\"mtk7\">true</span><span class=\"mtk1\">, </span><span class=\"mtk4\">space</span><span class=\"mtk1\">: </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> }) </span><span class=\"mtk5 mtki\">// xml to json</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">res</span><span class=\"mtk1\">.</span><span class=\"mtk3\">send</span><span class=\"mtk1\">(</span><span class=\"mtk4\">xmlToJson</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">app</span><span class=\"mtk1\">.</span><span class=\"mtk3\">listen</span><span class=\"mtk1\">(</span><span class=\"mtk11\">PORT</span><span class=\"mtk1\">, () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk6\">`Listening on port </span><span class=\"mtk9\">${</span><span class=\"mtk11\">PORT</span><span class=\"mtk9\">}</span><span class=\"mtk6\">`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># .env</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">REACT_APP_API_KEY=APIKEY입력하는곳</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\"># .gitignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">.env</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">/node_modules</span></span></span></code></pre>\n<p>터미널에서 server 디렉터리로 이동, <code>node server.js</code>를 실행하면 5050포트로 Express 서버가 실행된다. <code>http://localhost:5050/api/data</code>에서 API를 확인할 수 있다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230104/230104-07.png\" alt=\"230104-07\"></p>\n<p>코드 수정마다 매번 서버 재부팅을 하는 것은 귀찮기 때문에 <code>nodemon</code>을 설치하고, 명령어 간소화를 위해 <code>package.json</code>에 <code>scripts</code>를 추가한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"bash\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">$ yarn add nodemon</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"json\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// server/package.json</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;scripts&quot;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">&quot;dev&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;nodemon server.js&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>이제 <code>yarn dev</code> 명령어로 서버를 실행시킬 수 있다.</p>\n<p>만든 서버를 Heroku에 deploy 하는 것까지 글을 작성했지만 너무 글이 길어진 탓에 생긴 blog build의 문제거나, 페이지 색인 생성의 문제인지 search console에 url이 등록되지 않는 이슈가 생겼다. Heroku 배포 관련 내용은 다음 포스트에 써야할 듯 하다.</p>\n<hr>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<p><a href=\"https://velog.io/@vvsogi/%EA%B3%B5%EA%B3%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-API-React%EC%97%90%EC%84%9C-XML%EC%97%90%EC%84%9C-JSON-%EB%B3%80%ED%99%98\" target=\"_blank\" rel=\"noopener noreferrer\">공공 데이터 API React에서 XML에서 JSON 변환!</a></p>\n<p><a href=\"https://medium.com/harrythegreat/node-js%EC%97%90%EC%84%9C-request-js-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-28744c52f68d\" target=\"_blank\" rel=\"noopener noreferrer\">Node.js에서 Request.js 사용하기. 네트워크 더 간결하게 작성하자! | by Harry The Great | 해리의 유목코딩 | Medium</a></p>\n<p><a href=\"https://krpeppermint100.medium.com/devops-react-express-%EC%95%B1-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0-netlify-heroku-b238e057d920\" target=\"_blank\" rel=\"noopener noreferrer\">[TS]React,Express 풀스택 웹 앱 배포하기(Netlify, Heroku) | by PEPPERMINT100 | Medium</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/React/230104/#xml-%ED%98%95%EC%8B%9D%EC%9D%98-open-api\">XML 형식의 Open API</a></li>\n<li><a href=\"/React/230104/#express-web-server\">Express Web Server</a></li>\n<li><a href=\"/React/230104/#references\">References</a></li>\n</ul>","frontmatter":{"date":"2023년 01월 04일","title":"React에서 Open API XML 데이터 파싱하기 (with Express)","tags":["React","Open API","Express"]}}},"pageContext":{"slug":"/React/230104/","previous":{"fields":{"slug":"/Next/221213/"},"frontmatter":{"title":"Next.js REST API 세팅하기 (with Prisma, PlanetScale)"}},"next":{"fields":{"slug":"/React/230115/"},"frontmatter":{"title":"Heroku에 Express 서버 배포하기"}}}},"staticQueryHashes":["1081905842","3911196313"]}