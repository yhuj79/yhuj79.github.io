{"componentChunkName":"component---src-templates-blog-post-js","path":"/Computer Science/241021/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"스크립트 언어는 작업 자동화와 시스템 제어를 위한 것으로 시작되었으나, 현재는 웹 개발, 데이터 과학, 인공지능 등 다양한 분야에서 핵심적인 역할을 한다. 대표적으로 JavaScript와 Python이 있으며, 각기 다른 생태계와 강력한 기능으로 현대 소프트웨어 개발의 중심에 있다. 스크립트 언어의 개념과 역사 스크립트 언어란? 스크립트 언어(script…","html":"<blockquote>\n<p>스크립트 언어는 작업 자동화와 시스템 제어를 위한 것으로 시작되었으나, 현재는 웹 개발, 데이터 과학, 인공지능 등 다양한 분야에서 핵심적인 역할을 한다. 대표적으로 JavaScript와 Python이 있으며, 각기 다른 생태계와 강력한 기능으로 현대 소프트웨어 개발의 중심에 있다.</p>\n</blockquote>\n<h2 id=\"스크립트-언어의-개념과-역사\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EA%B0%9C%EB%85%90%EA%B3%BC-%EC%97%AD%EC%82%AC\" aria-label=\"스크립트 언어의 개념과 역사 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 언어의 개념과 역사</h2>\n<h3 id=\"스크립트-언어란\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EB%9E%80\" aria-label=\"스크립트 언어란 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 언어란?</h3>\n<p>스크립트 언어(scripting language)란 특정 애플리케이션을 제어하기 위해 작성된 프로그래밍 언어를 말한다. 일반적으로 컴파일 없이 인터프리터에 의해 바로 실행되는 특징을 가지며, 주로 웹 개발, 시스템 관리, 게임 개발, 데이터 처리 등의 다양한 분야에서 사용된다.</p>\n<p>프로그래밍 언어는 작동 방식에 따라 컴파일 언어(compiled language)와 인터프리터 언어(interpreter language) 두 가지로 분류할 수 있다. 컴파일 언어는 소스 코드를 기계어로 번역하여 실행 파일을 생성 후 실행되는 방식이며, 인터프리터 언어는 소스 코드를 한 줄씩 해석하여 즉시 실행하는 방식이다. 소프트웨어 제어를 위해서는 인터프리터 방식이 효과적이기 때문에 대부분의 스크립트 언어는 인터프리터 언어에 속한다.</p>\n<p>스크립트 언어는 사용 목적에 따라 정의되는 분류이기 때문에 작동 방식과는 직접적인 관련이 없다. 이는 인터프리터 언어가 발전함에 따라 편의를 위해 새롭게 파생된 용어로 볼 수 있다. 최근에는 이러한 스크립트 언어가 원래의 뜻을 벗어나 독립적인 프로그램 개발에도 사용될 수 있도록 진화하고 있기 때문에, 스크립트 언어를 단순히 특정 소프트웨어를 제어하기 위한 언어로 정의하는 것이 점차 모호해지고 있다.</p>\n<h3 id=\"스크립트-언어의-역사\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EC%97%AD%EC%82%AC\" aria-label=\"스크립트 언어의 역사 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 언어의 역사</h3>\n<div align=\"center\" style=\"color:gray\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <img alt=\"history\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241021/history.png\">\n    </div>\n    <p style=\"padding: 0 4px 12px\">Timeline Of Programming Languages</p>\n</div>\n<p>초기 스크립트 언어는 주로 대형 컴퓨터 시스템에서 작업 자동화를 목적으로 사용되었다. 이러한 초기 언어 중 하나가 IBM의 JCL(Job Control Language)이다. JCL은 메인프레임 컴퓨터에서 작업을 관리하고 처리하기 위해 사용되었으며, 특정 작업을 자동화하고 명령어를 실행하는 데 중요한 역할을 했다.</p>\n<p>1960~1970년대에 UNIX 운영체제가 등장하면서 스크립트 언어의 발전이 가속화되었다. 셸 스크립트(shell script)는 UNIX 환경에서 사용되었고, 사용자가 명령어를 자동으로 실행하거나 프로세스를 제어할 수 있도록 했다. 대표적인 셸 언어로는 Bourne Shell(sh), C Shell(csh) 등이 있으며, 이들은 운영체제와 직접 상호작용하여 파일 관리, 프로세스 제어 등의 작업을 쉽게 처리할 수 있게 해주었다.</p>\n<p>1980년대에 들어서면서 스크립트 언어는 점차 더 널리 사용되기 시작했다. 이 시기의 중요점 중 하나는 Perl과 같은 언어의 등장이다. 1987년에 개발된 Perl은 텍스트 처리와 파일 관리를 효율적으로 처리할 수 있는 기능을 제공하여 시스템 관리, 웹 개발, 데이터 처리 등 다양한 분야에서 큰 인기를 끌었다. Perl은 여러 가지 기능을 결합한 다목적 스크립트 언어로, UNIX 시스템의 텍스트 데이터를 조작하는 데 매우 유용했다.</p>\n<p>1990년대에 접어들면서 브라우저 전쟁과 더불어 인터넷의 급격한 확산으로 인해 웹 개발을 위한 스크립트 언어가 등장하기 시작했다. JavaScript는 1995년에 브라우저 내에서 동적인 웹 페이지를 구현하기 위해 개발된 언어로, 웹 개발의 혁신을 이끌었다. JavaScript는 오늘날 가장 광범위하게 사용되는 스크립트 언어 중 하나로, 현재 웹 프론트엔드 개발의 핵심 언어로 자리 잡고 있다.</p>\n<p>Javascript와 비슷한 시기에 등장하여 현재 전세계에서 가장 주목받는 언어가 있다. 바로 Python이다. Python은 그 단순하고 직관적인 문법 덕분에 초보자들에게 적합하면서도, 훌륭한 범용성과 확장성 덕분에 복잡한 응용 프로그램 개발에도 효과적으로 사용된다. 특히 데이터 과학, 인공지능, 머신러닝 등의 분야에서 Python의 사용은 거의 표준이 되었다.</p>\n<h2 id=\"주요-스크립트-언어\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4\" aria-label=\"주요 스크립트 언어 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 스크립트 언어</h2>\n<h3 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript</h3>\n<img alt=\"javascript\" src=\"https://raw.githubusercontent.com/yhuj79/yhuj79.github.io/refs/heads/master/content/assets/Javascript.png\">\n<p>JavaScript는 1995년에 Brendan Eich에 의해 개발된 이후, 웹 개발의 핵심 기술로 자리 잡은 대표적인 스크립트 언어다. HTML과 CSS와 함께 프론트엔드를 구성하는 3대 기술 요소 중 하나로, JavaScript는 웹 페이지의 각종 상호작용을 담당하는 뇌 역할을 하는 언어다.</p>\n<p>JavaScript의 주요 특징 중 하나는 인터프리터 언어로서 실행 전에 컴파일 과정 없이 브라우저에서 즉시 실행된다는 점이다. 이를 통해 개발자들은 빠르게 코드를 작성하고 결과를 확인할 수 있어, 웹 개발에서 매우 유용한 도구로 활용된다. 또한 싱글 스레드 언어인 Javascript는 비동기 처리가 가능하다. 서버로부터 데이터를 받아오거나 파일을 읽어오는 작업과 같은 시간이 오래 걸리는 작업을 병렬적으로 처리할 수 있다. 이러한 비동기 작업을 쉽게 관리하기 위해 Promise와 async/await 같은 기능이 도입되었으며, 이 기능들은 현재 웹 개발에서 중요한 역할을 한다.</p>\n<p>JavaScript의 범위는 시간이 지남에 따라 급격히 확장되었다. 초기에는 브라우저에서 실행되는 클라이언트 언어로만 사용되었지만, Node.js의 등장으로 서버 측 개발에도 사용될 수 있게 되었다. Node.js는 JavaScript 엔진을 기반으로 하여 서버 측 애플리케이션을 빠르고 효율적으로 실행할 수 있고, 이를 통해 JavaScript는 클라이언트와 서버 양쪽에서 모두 사용될 수 있는 풀스택 개발이 가능해졌다. 클라이언트 부분만 중점적으로 다룰 수 있었던 Javascript 전문 개발자는 조금의 추가적인 학습을 통해 전체 프로그램을 개발할 수 있게 되는 것이다.</p>\n<p>또한, JavaScript는 수많은 프레임워크와 라이브러리를 통해 그 기능이 확장되었다. 특히, React, Vue.js 등과 같은 프론트엔드 프레임워크는 복잡한 사용자 인터페이스를 보다 효율적이고 쉽게 구축할 수 있게 해주며, Express와 같은 서버 측 프레임워크는 웹 서버와 API를 간편하게 구현할 수 있도록 도와준다. 이러한 도구들은 대규모 웹 애플리케이션 개발에 필수적인 요소로 자리 잡았다.</p>\n<p>JavaScript는 모듈화와 패키지 관리를 지원하는 NPM(Node Package Manager)을 통해 방대한 생태계를 형성하고 있다. NPM은 다양한 라이브러리와 패키지를 쉽게 설치하고 관리할 수 있는 시스템으로, 개발자가 필요한 기능을 빠르게 통합할 수 있도록 돕는다. 이러한 확장성과 방대한 생태계는 JavaScript가 계속해서 웹 개발의 중심에 있게 된 핵심적인 이유 중 하나다.</p>\n<p>최근에는 JavaScript를 이용한 크로스 플랫폼 개발도 활발하게 이루어지고 있다. Electron을 사용하면 JavaScript로 데스크탑 애플리케이션을 개발할 수 있고, React Native를 통해 모바일 애플리케이션을 개발할 수 있다. 이를 통해 개발자들은 한 가지 언어로 다양한 플랫폼에 대응 가능한 유연성을 가질 수 있다.</p>\n<div align=\"center\" style=\"color:gray\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <img alt=\"redmonk\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241021/redmonk.png\">\n    </div>\n    <p style=\"padding: 0 4px 12px\">The RedMonk Programming Language Rankings: January 2024</p>\n</div>\n<p>JavaScript는 웹 개발을 넘어 서버, 모바일까지 다양한 분야에서 활용되는 범용적인 스크립트 언어로 발전했다. 위 그래프는 2024년 1월 기준 Github, Stack Overflow 통계를 기반으로 작성된 언어 랭킹으로, Javascript가 제일 최상단에 위치해 있다. 게다가 파생 언어인 Typescript도 바로 아래쪽에 있는 것을 볼 수 있다. 이렇듯 Javascript는 현 시점 부동의 프론트엔드 프레임워크 랭킹 1위인 React, 강력한 확장성을 지닌 NPM 등을 비롯하여 거대한 세계를 구축한 상태다. 이 방대한 생태계와 풍부한 도구들은 개발자들이 빠르고 효율적으로 애플리케이션을 개발할 수 있도록 지원하며, JavaScript는 현대 소프트웨어 개발에 있어 빠질 수 없는 중요한 언어로 자리 잡고 있다.</p>\n<h3 id=\"python\" style=\"position:relative;\"><a href=\"#python\" aria-label=\"python permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python</h3>\n<div align=\"center\" style=\"color:gray\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <img alt=\"tiobe\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241021/tiobe.png\">\n    </div>\n    <p style=\"padding: 0 4px 12px\">TIOBE Index for September 2024</p>\n</div>\n<p>위 지표는 각종 검색 엔진에서 검색된 수치를 기반으로 프로그래밍 언어의 인기도를 측정하는 TIOBE Index이다. 보다시피 Python은 압도적인 레이팅으로 1위를 유지하고 있다. 현재 전 세계에서 가장 유명하고 강력한 언어를 꼽는다면 단연 Python이 아닐까.</p>\n<p>Python은 Guido van Rossum이 1991년에 개발한 프로그래밍 언어로, 간결한 문법과 뛰어난 가독성 덕분에 빠르게 인기를 끌었다. Python은 초보자들에게도 접근성이 좋고, 다양한 분야에 사용 가능한 범용적인 언어로 자리 잡았다. 특히 최근 몇 년 동안 데이터 과학, 인공지능, 웹 개발 등에서 주요 언어로 떠오르며 그 영향력이 커졌다.</p>\n<div align=\"center\" style=\"color:gray\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <img alt=\"zen-of-python\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241021/zen-of-python.png\">\n    </div>\n    <p style=\"padding: 0 4px 12px\">The Zen of Python (Python의 19가지 지침 원칙)</p>\n</div>\n<p>Python의 가장 핵심적인 특징 중 하나는 간결함이다. Python은 복잡한 기능을 최소한의 코드로 구현할 수 있어, 코드를 작성하는 시간이 짧고 유지 보수하기가 용이하다. 이는 Python이 다양한 분야에서 폭넓게 사용되는 이유 중 하나다. 또한, 객체지향 프로그래밍을 기본으로 하면서도 함수형 프로그래밍과 절차적 프로그래밍을 모두 지원하여, 개발자들이 여러 프로그래밍 패러다임을 유연하게 사용할 수 있다.</p>\n<p>Python은 다양한 표준 라이브러리와 서드파티 라이브러리를 제공하는 강력한 생태계를 가지고 있다. 대표적으로 NumPy, Pandas, Matplotlib 등의 라이브러리는 데이터 분석 및 시각화에 널리 사용되며, TensorFlow, Keras, PyTorch 같은 라이브러리는 머신러닝과 딥러닝 모델을 구축하고 학습하는 데 필수적인 도구들이다. 이처럼 Python은 데이터 과학 및 인공지능 분야에서 표준적인 언어로 자리 잡았다.</p>\n<p>또한, Python은 웹 개발에서도 작지 않은 역할을 한다. Django와 Flask와 같은 웹 프레임워크는 빠르고 효율적으로 웹 애플리케이션을 개발할 수 있게 해주며, 이러한 프레임워크는 Python의 간결함을 그대로 살려 빠른 개발을 가능하게 한다. Django는 강력한 기능을 제공하며, 특히 대규모 웹 애플리케이션 개발에 적합하다. 반면, Flask는 더 가벼운 구조를 가지고 있어 소규모 프로젝트나 마이크로서비스 아키텍처에 유리하다. 이처럼 Python은 웹 프론트엔드, 백엔드 모두에서 강력한 도구를 제공하며, 웹 개발자들에게 인기 있는 선택이다.</p>\n<p>Python의 또 다른 주요 활용 분야는 자동화와 스크립팅이다. Python은 복잡한 시스템 작업을 자동화하는 데 매우 적합하여 반복적인 작업 처리에 용이하다. 또한, 크로스 플랫폼 지원이 뛰어나 다양한 운영체제에서 사용할 수 있으며, 시스템 관리, 데이터베이스 작업, 파일 처리 등 다양한 작업을 수행할 수 있는 도구로 활용된다.</p>\n<p>Python은 그 외에도 과학, 교육, 게임 분야에서 다양하게 사용된다. SciPy, SymPy와 같은 라이브러리들을 사용하여 복잡한 수학적 문제를 해결하고, Pygame과 같은 프레임워크를 통해 게임 개발에도 사용된다. 앞서 말했듯이 Python의 쉬운 학습 곡선 덕분에 프로그래밍을 처음 접하는 사람들에게도 많이 추천되며, 교육용 언어로서도 큰 인기를 끌고 있다.</p>\n<p>Python은 그 간결하고 직관적인 문법 덕분에 모든 수준의 개발자들에게 인기가 많으며, 웹 개발, 자동화, 데이터 과학, 인공지능 등 다양한 분야에서 핵심적인 도구로 자리 잡고 있다. 그 광범위한 생태계와 뛰어난 확장성은 Python이 현재와 미래의 기술 발전에 중요한 역할을 계속해서 수행할 수 있도록 만든다.</p>\n<h3 id=\"기타-언어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EC%96%B8%EC%96%B4\" aria-label=\"기타 언어 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 언어</h3>\n<p>Python과 JavaScript 외에도 다양한 스크립트 언어들이 각기 다른 용도와 특징을 기반으로 꾸준히 사용되고 있다.</p>\n<p>먼저 Ruby는 1995년에 마츠모토 유키히로(Yukihiro Matsumoto)에 의해 개발된 객체지향 스크립트 언어로, 단순성과 우아함을 중시하는 문법이 특징이다. Ruby는 개발자가 읽기 쉽고 쓰기 쉬운 코드를 작성할 수 있도록 설계되었으며, 이로 인해 생산성을 크게 높일 수 있다. Ruby는 특히 Ruby on Rails라는 강력한 웹 애플리케이션 프레임워크 덕분에 웹 개발 분야에서 큰 인기를 끌었다. Rails는 간결하고 직관적인 구조로 웹 애플리케이션 개발을 빠르게 진행할 수 있게 해주며, 대규모 웹 서비스뿐만 아니라 스타트업에서도 종종 사용되고 있다.</p>\n<p>PHP는 서버 측 웹 개발에 특화된 스크립트 언어로, 특히 동적 웹 페이지를 생성하는 데 유용하다. 1995년에 라스무스 러도프(Rasmus Lerdorf)에 의해 처음 개발된 PHP는 시간이 지남에 따라 성능과 보안이 크게 향상되었으며, 여전히 많은 웹사이트와 시스템에서 사용되고 있다. 특히 WordPress와 같은 인기 있는 콘텐츠 관리 시스템(CMS)이 PHP로 개발되어 있어, 전 세계 수백만 개의 웹사이트에서 PHP를 사용하고 있다. PHP는 최근 Javascript 기반 프레임워크의 강세 때문에 인기가 하락하는 추세다. 하지만 꾸준한 업데이트, 무난한 생태계와 학습 곡선으로 중소규모 웹 프로젝트에서 여전히 중요한 역할을 하고 있다.</p>\n<p>Lua는 간결하고 효율적인 스크립트 언어로, 특히 게임 개발과 임베디드 시스템에서 자주 사용된다. 1993년 브라질의 연구자들에 의해 개발된 Lua는 가벼운 메모리 사용과 높은 실행 속도를 자랑하며, 이러한 특성 때문에 게임 엔진 내에서 스크립팅 용도로 자주 활용된다. Roblox와 같은 인기 게임 플랫폼에서도 Lua가 주요 언어로 사용되고 있으며, 이는 Lua의 학습 난이도가 낮고, 성능이 뛰어나기 때문이다. 또한 Nginx와 같은 서버 소프트웨어에서도 확장성을 높이기 위해 Lua를 사용하는 경우가 있다.</p>\n<h2 id=\"스크립트-언어의-미래-전망\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EB%AF%B8%EB%9E%98-%EC%A0%84%EB%A7%9D\" aria-label=\"스크립트 언어의 미래 전망 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 언어의 미래 전망</h2>\n<h3 id=\"스크립트-언어의-상승-요인\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EC%83%81%EC%8A%B9-%EC%9A%94%EC%9D%B8\" aria-label=\"스크립트 언어의 상승 요인 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 언어의 상승 요인</h3>\n<p>컴퓨터 공학이 등장한 이후, IT 분야의 초창기 개발 흐름은 근본적인 프로그램 개발과 하드웨어 설계가 중점이었다. 이 당시의 프로그래밍은 매우 복잡하고 수동적이었으며, 기계어와 어셈블리어 같은 저수준 언어가 주로 사용되었다. 하지만 시간이 흐르면서 하드웨어의 발전에 발맞춰 소프트웨어의 중요성이 점차 부각되었고, 보다 효율적이고 유연한 프로그램 개발을 위해 다양한 프로그래밍 언어가 탄생하게 되었다. 이러한 흐름 속에서 개발 환경은 점점 더 추상화되고 사용자 친화적으로 변모해 갔으며, 그 과정에서 스크립트 언어가 주목받기 시작했다. 최근 스크립트 언어가 각광받고 있는 이유는 바로 이러한 편의성에 있다. 스크립트 언어는 인터프리터 방식으로 실행되기 때문에, 빠른 개발과 테스트가 가능하며, 신속한 요구 사항 대응이 중요한 현대 개발 환경에서 그 가치를 발휘하는 중이다.</p>\n<p>컴파일 언어는 언어 자체를 설계할 때부터 매우 세밀한 구조와 엄격한 규칙을 따른다. 이 덕분에 컴파일 언어는 일반적으로 더 안정적이고 최적화된 성능을 보일 수는 있어도, 그만큼 언어 설계와 구현에 더 많은 시간이 필요하게 된다. 반면, 인터프리터 언어는 그 자체로 설계가 상대적으로 단순하고, 빠른 실행과 수정이 가능하여, 새로운 언어를 개발하고 세상에 내놓기까지의 시간이 크게 단축된다. 특히 인터프리터 언어는 다른 언어로 인터프리터를 구현할 수 있기 때문에, 굳이 그 언어 자체로 인터프리터를 만들 필요가 없다. 덕분에 언어 설계의 자유도가 높아지며, 새로운 아이디어를 빠르게 반영할 수 있는 환경을 제공한다.</p>\n<p>또한, 스크립트 언어는 배우기 쉽다는 장점이 있다. 이는 초보 개발자들에게 매우 중요한 요소로 작용하는데, 문법이 간단하고 직관적인 구조를 지닌 스크립트 언어들은 타 언어 대비 학습 곡선이 낮다. 물론 배움의 정도가 깊어질수록 다른 언어들과 다를 바 없이 높은 난이도를 요구하지만, 당장 백지 상태부터 시작하는 초심자들에게 이보다 더 좋은 선택지는 없다. Python이나 JavaScript와 같은 대표적인 스크립트 언어들은 입문자들이 쉽게 배울 수 있는 언어로 자주 추천되며, 이는 관련 개발자 커뮤니티의 성장을 촉진하는 것에도 결정적인 역할을 한다.</p>\n<p>결론적으로, 스크립트 언어의 상승 요인은 언어 자체의 성능이나 완성도에 있는 것은 아니다. 휼륭한 접근성, 생산성을 기반으로 발현되는 집단 지성을 통해 몸집을 눈덩이처럼 불려가는 것이 핵심적인 상승 요인이라고 볼 수 있다.</p>\n<h3 id=\"미래-발전-방향\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EB%9E%98-%EB%B0%9C%EC%A0%84-%EB%B0%A9%ED%96%A5\" aria-label=\"미래 발전 방향 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미래 발전 방향</h3>\n<p>시간이 지남에 따라 스크립트 언어는 단순한 텍스트 해석 도구에서 벗어나 성능과 확장성 측면에서 상당한 발전을 이뤘다. 이에 따라, 미래의 스크립트 언어는 더욱 강력하고 유연한 방향으로 진화할 것이다.</p>\n<p>첫째, 퍼포먼스의 향상이 컴퓨터 언어의 중요한 발전 축이 될 것이다. 과거에는 스크립트 언어가 컴파일 언어에 비해 상대적으로 느리다는 평가를 받았으나, 현대에는 JIT(Just-In-Time) 컴파일러와 같은 기술이 적용되면서 이러한 격차가 크게 줄어들었다. JIT 컴파일러는 컴파일러와 인터프리터의 장점을 합치고자 만들어진 개념으로, 앞으로는 JIT 컴파일러와 같은 최적화 기술들을 통해 스크립트 언어의 실행 성능이 네이티브 컴파일 언어와 유사한 수준에 도달할 것으로 예상된다. 사실 이러한 과정은 컴파일 언어, 인터프리터 언어를 구분하는 장벽이 서서히 무너지고 있다는 것을 의미하기도 한다. Chrome의 V8 엔진도 앞서 말했던 JIT 컴파일러가 적용되어 인터프리터 시스템의 일부로 컴파일러가 포함된 형태이다. 성능에 대한 요구가 증가함에 따라 개발자들은 점차 컴파일 언어, 스크립트 언어 서로의 장점을 혼합하여 퍼포먼스 향상을 이뤄내고, 더욱 폭넓게 사용할 수 있게 될 것이다.</p>\n<p>둘째, 다중 플랫폼 지원이 스크립트 언어의 핵심적인 발전 방향이 될 것이다. Javascript와 같은 언어는 현재도 브라우저, 서버, 모바일 등 다양한 플랫폼에서 사용되고 있지만, 미래에는 더 많은 환경에서 스크립트 언어가 중요한 역할을 할 것으로 예상된다. 최근 동향을 살펴보면, WebAssembly와 같은 기술이 떠오르고 있다. WebAssembly는 브라우저뿐 아니라 서버, 게임 엔진, IoT 디바이스 등에서 Javascript와 상호 보완되며 사용할 수 있는 언어로, 성능과 다중 플랫폼 지원 측면에서 중요한 역할을 하고 있다. 단순한 클라이언트 제어용 언어를 넘어선 발전 가능성을 보여준다. 또한 IoT(사물인터넷), AR/VR, 블록체인과 같은 신기술이 대두되면서, 스크립트 언어가 다양한 디바이스 간의 연결과 데이터 처리에서 유용한 도구 중 하나로 자리매김하는 중이다. AR/VR 영역에서는 Javascript 기반 프레임워크인 Three.js나 A-Frame을 통해 웹 기반의 3D 콘텐츠 및 인터랙티브 환경이 구축되고 있고, 블록체인 기술에서는 Ethereum의 Smart Contract과 같은 기술이 Javascript 기반의 언어로 작성되는 경우가 있다. 이러한 신기술들은 스크립트 언어가 기존 플랫폼을 넘어서 더 다양한 환경에서 활발히 사용되고 있음을 보여주는 사례이며, 앞으로도 이러한 추세는 가속화될 것이다.</p>\n<p>셋째, 개발자의 생산성을 극대화하는 도구의 발전이 이어질 것이다. 이미 다양한 프레임워크와 라이브러리들이 개발자들이 더 쉽게 복잡한 애플리케이션을 개발할 수 있도록 돕고 있다. React, Vue, Angular 같은 프레임워크를 통해 빠르고 효율적인 클라이언트 개발을 할 수 있고, Node.js를 통해 서버 측 애플리케이션 개발도 가능해졌으며, 이는 JavaScript 하나의 언어로 클라이언트와 서버 모두에서 활용할 수 있는 강력한 생태계를 형성하고 있다. 미래에는 이러한 JavaScript 도구들이 더욱 지능적이고 자동화된 형태로 발전할 것이다. AI 기반 코드 보완 도구나 자동화된 테스팅 프레임워크, 그리고 코드 생성기가 도입되면서 개발자는 코드 작성에 소모되는 시간을 줄이고, 논리적 문제 해결에 더 많은 시간을 할애할 수 있을 것이다. 또한, WebAssembly와 같은 기술의 발전으로 JavaScript의 성능이 한층 더 강화되면서, 브라우저 기반 애플리케이션의 복잡성과 성능이 크게 향상될 것이다. 이처럼 JavaScript 생태계의 발전은 개발자의 생산성을 비약적으로 높이는 데 중요한 역할을 하겠지만, 더 나아가 다른 스크립트 언어들도 점차 자동화와 성능 최적화를 통한 발전을 이어갈 것이며, 이는 전반적인 개발 환경의 변화를 이끌어낼 것이다.</p>\n<p>넷째, 오픈 소스와 협업의 중요성이 더욱 커질 것이다. 스크립트 언어는 커뮤니티와의 협업을 통해 빠르게 발전해 왔으며, 이 트렌드는 앞으로도 지속될 것이다. 오픈 소스 프로젝트의 활성화는 더 많은 사람들이 개발에 참여할 수 있는 기회를 제공하며, 새로운 아이디어와 기술이 더 빠르게 발전할 수 있다.</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>스크립트 언어는 본래의 목적이었던 특정 애플리케이션의 제어를 넘어서, 현대 소프트웨어 개발의 중심에서 핵심적인 역할을 수행하고 있다. 이러한 언어는 개발의 편의성과 접근성을 중시하며, 빠른 개발과 효율적인 문제 해결을 가능하게 한다. JavaScript와 Python은 그 대표적인 예로, 각각 웹 개발과 데이터 과학 분야에서 강력한 생태계를 형성하고 있으며, 다수의 프레임워크와 라이브러리를 통해 지속적으로 발전하고 있다.</p>\n<div align=\"center\" style=\"color:gray\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <img alt=\"lang-network\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241021/lang-network.png\">\n    </div>\n    <p style=\"padding: 0 4px 12px\">Programming Language Network</p>\n</div>\n<p>현재 소프트웨어 개발 패러다임은 춘추전국시대와 같은 형국이다. 수많은 기술들이 등장하고 사라지는 과정 속에서도 스크립트 언어는 비교적 그 명맥을 유지해 나갈 것으로 보인다. 그러나 시간이 지나면서 스크립트 언어라는 명칭은 새로운 의미로 변화할 가능성 또한 높다. 웹 개발의 프론트엔드와 백엔드 기술이 고도화되면서 서로의 경계가 모호해지는 현상이 나타나는 것처럼, 컴파일 언어와 스크립트 언어 또한 서로의 장점을 통합하며 간편하면서도 배우기 쉽고, 성능은 강력한 언어가 계속해서 등장할 것이다.</p>\n<p>따라서, 스크립트 언어는 거대한 생태계를 바탕으로 계속해서 변화와 발전을 거듭할 것으로 보인다. 끊임없이 진화하는 기술 환경 속에서, 스크립트 언어는 앞으로도 효율적이고 혁신적인 소프트웨어 개발을 위한 필수 도구로 자리매김할 것이다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE00951344\" target=\"_blank\" rel=\"noopener noreferrer\">스크립트 언어 비교 : 프로그래밍 편의성 관점에서</a></p>\n<p><a href=\"https://www.dbpia.co.kr/journal/detail?nodeId=T14157414\" target=\"_blank\" rel=\"noopener noreferrer\">웹 어플리케이션의 보안 설계와 개선에 관한 연구</a></p>\n<p><a href=\"https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE00607211\" target=\"_blank\" rel=\"noopener noreferrer\">스크립트 언어의 동향 및 응용 방안</a></p>\n<p><a href=\"https://www.dbpia.co.kr/journal/articleDetail?nodeId=NODE00599172\" target=\"_blank\" rel=\"noopener noreferrer\">Web Script 언어 기술동향</a></p>\n<p><a href=\"https://javaconceptoftheday.com/history-of-programming-languages\" target=\"_blank\" rel=\"noopener noreferrer\">History Of Programming Languages</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Job_Control_Language\" target=\"_blank\" rel=\"noopener noreferrer\">Job Control Language</a></p>\n<p><a href=\"https://www.coursera.org/articles/scripting-language\" target=\"_blank\" rel=\"noopener noreferrer\">What Are Scripting Languages? (And Why Should I Learn One?)</a></p>\n<p><a href=\"https://www.tiobe.com/tiobe-index\" target=\"_blank\" rel=\"noopener noreferrer\">TIOBE Index for October 2024</a></p>\n<p><a href=\"https://redmonk.com/sogrady/2024/03/08/language-rankings-1-24\" target=\"_blank\" rel=\"noopener noreferrer\">The RedMonk Programming Language Rankings: January 2024</a></p>\n<p><a href=\"https://peps.python.org/pep-0020\" target=\"_blank\" rel=\"noopener noreferrer\">PEP 20 – The Zen of Python</a></p>\n<p><a href=\"https://github.com/ethereum/go-ethereum\" target=\"_blank\" rel=\"noopener noreferrer\">go-ethereum</a></p>\n<p><a href=\"https://github.com/ethereumjs/keythereum\" target=\"_blank\" rel=\"noopener noreferrer\">keythereum</a></p>\n<p><a href=\"https://v8.dev/blog/maglev\" target=\"_blank\" rel=\"noopener noreferrer\">Maglev - V8’s Fastest Optimizing JIT</a></p>\n<p><a href=\"https://webassembly.org\" target=\"_blank\" rel=\"noopener noreferrer\">Webassembly</a></p>\n<p><a href=\"https://programminglanguages.info/influence-network\" target=\"_blank\" rel=\"noopener noreferrer\">Programming Language Network</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Computer%20Science/241021/#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EA%B0%9C%EB%85%90%EA%B3%BC-%EC%97%AD%EC%82%AC\">스크립트 언어의 개념과 역사</a></p>\n<ul>\n<li><a href=\"/Computer%20Science/241021/#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EB%9E%80\">스크립트 언어란?</a></li>\n<li><a href=\"/Computer%20Science/241021/#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EC%97%AD%EC%82%AC\">스크립트 언어의 역사</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Computer%20Science/241021/#%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4\">주요 스크립트 언어</a></p>\n<ul>\n<li><a href=\"/Computer%20Science/241021/#javascript\">Javascript</a></li>\n<li><a href=\"/Computer%20Science/241021/#python\">Python</a></li>\n<li><a href=\"/Computer%20Science/241021/#%EA%B8%B0%ED%83%80-%EC%96%B8%EC%96%B4\">기타 언어</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Computer%20Science/241021/#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EB%AF%B8%EB%9E%98-%EC%A0%84%EB%A7%9D\">스크립트 언어의 미래 전망</a></p>\n<ul>\n<li><a href=\"/Computer%20Science/241021/#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%96%B8%EC%96%B4%EC%9D%98-%EC%83%81%EC%8A%B9-%EC%9A%94%EC%9D%B8\">스크립트 언어의 상승 요인</a></li>\n<li><a href=\"/Computer%20Science/241021/#%EB%AF%B8%EB%9E%98-%EB%B0%9C%EC%A0%84-%EB%B0%A9%ED%96%A5\">미래 발전 방향</a></li>\n</ul>\n</li>\n<li><a href=\"/Computer%20Science/241021/#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n<li><a href=\"/Computer%20Science/241021/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2024년 10월 21일","title":"스크립트 언어의 진화와 미래 기술 동향","tags":["Computer Science","Script","Javascript","Python"]}}},"pageContext":{"slug":"/Computer Science/241021/","previous":{"fields":{"slug":"/React/241010/"},"frontmatter":{"title":"React 지도 라이브러리 Leaflet"}},"next":{"fields":{"slug":"/Computer Science/241119/"},"frontmatter":{"title":"MVC, MVP, MVVM"}}}},"staticQueryHashes":["1081905842","3911196313"]}