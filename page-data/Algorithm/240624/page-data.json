{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/240624/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"알고리즘 문제의 복잡성에 대해 이야기할 때, P-NP, NP-완전, NP-난해와 같은 용어들이 등장하게 된다. 외판원 순회, 부분집합의 합과 같은 문제들에 대해 찾아볼 때 각 정보글마다 NP-완전이니, NP-난해니 말이 달라서 혼란이 있었다. 이에 대해 좀 더 조사해 보니, 그렇게 헷갈리게 된 원인이 파악되었다. 이 포스트에서는 P-NP의 개념과 함께 N…","html":"<blockquote>\n<p>알고리즘 문제의 복잡성에 대해 이야기할 때, P-NP, NP-완전, NP-난해와 같은 용어들이 등장하게 된다. 외판원 순회, 부분집합의 합과 같은 문제들에 대해 찾아볼 때 각 정보글마다 NP-완전이니, NP-난해니 말이 달라서 혼란이 있었다. 이에 대해 좀 더 조사해 보니, 그렇게 헷갈리게 된 원인이 파악되었다. 이 포스트에서는 P-NP의 개념과 함께 <strong>NP-난해 (NP-hard)</strong>와 <strong>NP-완전 (NP-complete)</strong>의 차이를 명확히 하고, 추가적으로 외판원 순회 문제의 두 가지 종류에 대한 내용도 다루었다.</p>\n</blockquote>\n<h2 id=\"p와-np\" style=\"position:relative;\"><a href=\"#p%EC%99%80-np\" aria-label=\"p와 np permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>P와 NP</h2>\n<p>먼저 이 개념은 결정론적, 비결정론적 튜링 머신과 관련되어 있다. <strong>튜링 머신 (Turing machine)</strong>은 수학자 앨런 튜링(Alan Turing)이 1936년에 제시한 개념으로, 계산하는 기계의 일반적인 개념을 설명하기 위한 가상의 기계다. 튜링은 이 개념을 Automatic에서 따온 A-Machine이라고 불렀는데 튜링 사후에 창시자의 이름을 따 튜링 머신이라고 부르게 되었다.</p>\n<p>따라서 튜링 머신은 실존하는 기계가 아니라 수학적 상상이다.</p>\n<ul>\n<li><strong>결정론적 튜링 머신</strong>: 매 순간 다음 상태를 하나만 가질 수 있다.</li>\n<li><strong>비결정론적 튜링 머신</strong>: 매 순간 여러 개의 다음 상태를 가질 수 있다.</li>\n</ul>\n<p><strong>P (Polynomial Time)</strong>는 결정론적 튜링 머신이 다항 시간 내에 풀 수 있는 문제들의 집합이다. 다항식(Polynomial) 시간 이내에 그 문제의 답을 계산해낼 수 있는 알고리즘이 존재한다면, 그 문제는 P 문제에 해당된다. 결론적으로 네, 아니오로 명확히 대답할 수 있고, 답을 찾는 것에 그리 오랜 시간이 걸리지 않는다.</p>\n<p><strong>NP (Non-Deterministic Polynomial Time)</strong>는 비결정론적 튜링 머신이 다항 시간 내에 풀 수 있는 문제들이다. 문제를 푸는 각 단계에서 여러 가지의 가능성을 동시에 고려할 수 있는 비결정적 알고리즘(Non-Deterministic Algorithm)으로, 이는 '알맞은 힌트'를 주면 다항 시간 내에 검증할 수 있는 문제로 생각할 수도 있다. 따라서 NP는 풀이가 힘들 수 있지만, 답이 맞는지는 확인할 수 있는 문제다.</p>\n<img alt=\"pnp\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240624/pnp.png\">\n<p>P는 NP에 포함되며, 모든 P 문제는 NP 문제다. NP 문제 중 일부는 아직 결정론적 튜링 머신으로 다항 시간 내에 풀 수 있는지(즉, P에 속하는지) 불확실하다.</p>\n<h2 id=\"np-난해-np-hard\" style=\"position:relative;\"><a href=\"#np-%EB%82%9C%ED%95%B4-np-hard\" aria-label=\"np 난해 np hard permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NP-난해 (NP-Hard)</h2>\n<p>다음은 NP 문제에 대한 문제 포함 관계 그림이다. 아직 완전히 증명되지는 못했으나, 대부분의 전문가들에 의해 이 형태가 맞을 것으로 추정하고 있다고 한다.</p>\n<img alt=\"nphard\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240624/nphard.png\">\n<p><strong>NP-난해 (NP-Hard)</strong>는 NP 문제를 포함한 더 어려운 문제까지 포괄하는 개념으로, 주어진 답을 빠르게 검증할 수 있는지 여부와 관계없이 모든 NP 문제를 이 문제로 변환할 수 있는 문제이다. 적어도 모든 NP 문제만큼은 어려운 문제들의 집합이다.</p>\n<p>즉, 어떤 NP-난해 문제를 풀 수 있다면, 모든 NP 문제도 다항 시간 내에 풀 수 있다는 의미다. 하지만 NP-난해 문제는 NP에 속하지 않을 수도 있어, 검증조차 다항 시간 내에 불가능할 수 있다. NP-난해 문제들은 보통 근사나 휴리스틱한 방법 등 간접적으로 해결된다.</p>\n<h4 id=\"주요-np-난해-문제\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-np-%EB%82%9C%ED%95%B4-%EB%AC%B8%EC%A0%9C\" aria-label=\"주요 np 난해 문제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 NP-난해 문제</h4>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">외판원 순회(Traveling Salesman Problem) (최적화 버전)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">정지 문제(Halting Problem)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">부분 집합의 합(Subset Sum) (NP-완전에도 속함)</span></span></code></pre>\n<h2 id=\"np-완전-np-complete\" style=\"position:relative;\"><a href=\"#np-%EC%99%84%EC%A0%84-np-complete\" aria-label=\"np 완전 np complete permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NP-완전 (NP-Complete)</h2>\n<img alt=\"npcomplete\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240624/npcomplete.png\">\n<p><strong>NP-완전 (NP-Complete)</strong>는 NP-난해 문제의 하위 집합으로, NP에 속하면서 NP 난해인 문제이다. 해결 방법이 주어졌을 때 빠르게(다항 시간 내에) 검증할 수 있으며, 다른 모든 NP 문제를 다항 시간 내에 변환할 수 있는 문제를 뜻한다.</p>\n<p>NP-완전 문제를 풀 수 있는 알고리즘이 존재한다면, 모든 NP 문제를 풀 수 있는 알고리즘도 존재한다는 뜻이다. 따라서 NP-완전 문제는 NP와 P의 관계를 이해하는 데 매우 중요하다.</p>\n<h4 id=\"주요-np-완전-문제\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-np-%EC%99%84%EC%A0%84-%EB%AC%B8%EC%A0%9C\" aria-label=\"주요 np 완전 문제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 NP-완전 문제</h4>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">외판원 순회(Traveling Salesman Problem) (결정형 버전)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">해밀턴 경로(Hamiltonian Path)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">충족 가능성 문제(Satisfiability Problem)</span></span></code></pre>\n<h2 id=\"난해와-완전이-혼용되어-사용된-이유\" style=\"position:relative;\"><a href=\"#%EB%82%9C%ED%95%B4%EC%99%80-%EC%99%84%EC%A0%84%EC%9D%B4-%ED%98%BC%EC%9A%A9%EB%90%98%EC%96%B4-%EC%82%AC%EC%9A%A9%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"난해와 완전이 혼용되어 사용된 이유 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>난해와 완전이 혼용되어 사용된 이유</h2>\n<p>어떠한 알고리즘 문제에 대해 A 글에서는 NP-완전 문제이다... B 글에서는 NP-난해 문제이다... 표현이 다르면 이 개념에 대해 처음 배우게 될 때 굉장한 혼란이 될 수 있다.</p>\n<h4 id=\"부분집합의-합-문제\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%B6%84%EC%A7%91%ED%95%A9%EC%9D%98-%ED%95%A9-%EB%AC%B8%EC%A0%9C\" aria-label=\"부분집합의 합 문제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부분집합의 합 문제</h4>\n<img alt=\"subsetsum\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240624/subsetsum.png\">\n<p>NP-난해에 해당하는 문제 중 <strong>부분집합의 합 문제(Subset Sum)</strong>가 있다. 이 문제는 계산 복잡도 이론과 암호학에 관련된 문제로, n개의 원소를 가진 정수의 집합 S가 주어지고, 임의의 정수 K가 주어졌을 때, 합이 K가 되는 부분집합이 있는지를 묻는 문제이다. <a href=\"https://www.geeksforgeeks.org/subset-sum-is-np-complete/\" target=\"_blank\" rel=\"noopener noreferrer\">기본적으로 NP-완전 문제라 볼 수 있지만</a>, 부분집합의 합 문제를 다룬 여러 정보글에서 NP-난해, NP-완전을 혼용하여 사용한 것이 확인되었다.</p>\n<p>앞서 다룬 개념대로 보자면 1차적으로 <strong>NP-완전 문제는 NP-난해 문제의 하위 집합이다.</strong> 문제를 다루기에 앞서 NP-난해와 NP-완전의 문제 포함 관계에 대해 정의하고 들어가거나, <code>Subset Sum 문제는 NP-난해이면서 NP-완전 문제이다.</code> 라고 명시하는 것이 옳게 된 표현이다.</p>\n<h4 id=\"최적화-결정형-외판원-순회-문제\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A0%81%ED%99%94-%EA%B2%B0%EC%A0%95%ED%98%95-%EC%99%B8%ED%8C%90%EC%9B%90-%EC%88%9C%ED%9A%8C-%EB%AC%B8%EC%A0%9C\" aria-label=\"최적화 결정형 외판원 순회 문제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최적화, 결정형 외판원 순회 문제</h4>\n<img alt=\"tsp\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/240624/tsp.png\">\n<p><strong>외판원 순회 문제(Traveling Salesman Problem)</strong>는 주어진 모든 도시를 한 번씩 방문하고 다시 시작 도시로 돌아오는 경로에 대한 문제이다.</p>\n<p>보통의 외판원 순회 문제는 각 도시의 최소 여행 경로를 찾는 것을 원하므로, 이 경우는 NP-난해에 해당한다. <strong>최적해를 찾는 경우(최적화 버전, Optimization Version)</strong>인 것이다.</p>\n<p>최단 경로가 아닌 특정한 조건을 원하는 경우의 형태도 있다. 가중치의 합이 어떤 값 이하인 것이라던가. 이러면 <strong>결정형 버전(Decision Version)</strong>이 된다. 이는 최적화 문제로서의 외판원 순회 문제와 달리, 경로의 길이가 특정 임계값 이하인지를 확인하는 형태로 바뀌었기 때문에 NP-완전의 조건을 만족한다.</p>\n<p>두 가지 버전을 예시와 함께 정리해 보면 다음과 같다.</p>\n<ul>\n<li><strong>외판원 순회 문제(최적화 버전)</strong> : 한 도시에서 출발하여 모든 도시를 한 번씩 방문하고 다시 출발지로 돌아오는 최소 비용의 경로를 찾는 문제이다.</li>\n<li><strong>외판원 순회 문제(결정형 버전)</strong> : 주어진 비용 C 이하로 모든 도시를 한 번씩 방문하고 다시 출발지로 돌아오는 경로가 존재하는지를 묻는 문제로, \"모든 도시를 한 번씩 방문하고 다시 출발지로 돌아오는 경로의 총 비용이 C 이하인 경로가 존재하는가?\"라는 질문을 하는 것이다.</li>\n</ul>\n<p>따라서 통상적인 외판원 순회에서 변형된 버전은 NP-완전이 될 수 있다. 외판원 순회는 문제들 중에서도 어려운 편으로, 일반적인 외판원 순회 문제에 대한 다항 시간 근사 알고리즘은 P = NP가 아닌 한 존재하지 않는다는 것이 밝혀져 있다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://3catpapa.tistory.com/53\" target=\"_blank\" rel=\"noopener noreferrer\">제 13강 근사 알고리즘(튜링기계,다항시간,클래스P,클래스NP)</a></p>\n<p><a href=\"https://optboy.github.io/programming/2020/04/03/P_NP.html\" target=\"_blank\" rel=\"noopener noreferrer\">P, NP 문제</a></p>\n<p><a href=\"https://velog.io/@hysong/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-P-NP-%EB%AC%B8%EC%A0%9CP-NP-Problem\" target=\"_blank\" rel=\"noopener noreferrer\">P-NP 문제(P-NP Problem)</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Alan_Turing\" target=\"_blank\" rel=\"noopener noreferrer\">Alan Turing - Wikipedia</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/NP-%EB%82%9C%ED%95%B4\" target=\"_blank\" rel=\"noopener noreferrer\">NP-난해 - Wikipedia</a></p>\n<p><a href=\"https://zeddios.tistory.com/176\" target=\"_blank\" rel=\"noopener noreferrer\">TSP는 NP-Complete</a></p>\n<p><a href=\"https://sevity.tistory.com/16\" target=\"_blank\" rel=\"noopener noreferrer\">subset sum</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%99%B8%ED%8C%90%EC%9B%90_%EB%AC%B8%EC%A0%9C\" target=\"_blank\" rel=\"noopener noreferrer\">외판원 문제 - Wikipedia</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Algorithm/240624/#p%EC%99%80-np\">P와 NP</a></li>\n<li>\n<p><a href=\"/Algorithm/240624/#np-%EB%82%9C%ED%95%B4-np-hard\">NP-난해 (NP-Hard)</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Algorithm/240624/#%EC%A3%BC%EC%9A%94-np-%EB%82%9C%ED%95%B4-%EB%AC%B8%EC%A0%9C\">주요 NP-난해 문제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Algorithm/240624/#np-%EC%99%84%EC%A0%84-np-complete\">NP-완전 (NP-Complete)</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Algorithm/240624/#%EC%A3%BC%EC%9A%94-np-%EC%99%84%EC%A0%84-%EB%AC%B8%EC%A0%9C\">주요 NP-완전 문제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Algorithm/240624/#%EB%82%9C%ED%95%B4%EC%99%80-%EC%99%84%EC%A0%84%EC%9D%B4-%ED%98%BC%EC%9A%A9%EB%90%98%EC%96%B4-%EC%82%AC%EC%9A%A9%EB%90%9C-%EC%9D%B4%EC%9C%A0\">난해와 완전이 혼용되어 사용된 이유</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Algorithm/240624/#%EB%B6%80%EB%B6%84%EC%A7%91%ED%95%A9%EC%9D%98-%ED%95%A9-%EB%AC%B8%EC%A0%9C\">부분집합의 합 문제</a></li>\n<li><a href=\"/Algorithm/240624/#%EC%B5%9C%EC%A0%81%ED%99%94-%EA%B2%B0%EC%A0%95%ED%98%95-%EC%99%B8%ED%8C%90%EC%9B%90-%EC%88%9C%ED%9A%8C-%EB%AC%B8%EC%A0%9C\">최적화, 결정형 외판원 순회 문제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Algorithm/240624/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2024년 06월 24일","title":"NP-난해와 NP-완전의 혼용","tags":["Algorithm"]}}},"pageContext":{"slug":"/Algorithm/240624/","previous":{"fields":{"slug":"/React/240608/"},"frontmatter":{"title":"React에서 이미지 Pre Loading 처리 테스트 해보기"}},"next":{"fields":{"slug":"/React/240713/"},"frontmatter":{"title":"React로 360도 돌아가는 이미지 구현 (react-360-view)"}}}},"staticQueryHashes":["1081905842","3911196313"]}