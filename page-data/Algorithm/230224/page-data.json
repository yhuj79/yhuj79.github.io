{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/230224/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"온라인 저지, 알고리즘 대회 등에서 문제를 출제할 때 출제자의 의도에 맞는 효율적인 구조로 유도하기 위해 적절한 시간 제한을 두기 때문에, 알고리즘 설계 시 시간 복잡도를 고려하여 작성해야 한다. 알고리즘의 분석 기준 알고리즘의 성능을 분석하는 판단 기준에는 정확성, 명확성, 수행량, 메모리 사용량, 최적성 등이 있다. 이러한 기준을 바탕으로 알고리즘을 …","html":"<blockquote>\n<p>온라인 저지, 알고리즘 대회 등에서 문제를 출제할 때 출제자의 의도에 맞는 효율적인 구조로 유도하기 위해 적절한 시간 제한을 두기 때문에, 알고리즘 설계 시 시간 복잡도를 고려하여 작성해야 한다.</p>\n</blockquote>\n<h2 id=\"알고리즘의-분석-기준\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%B6%84%EC%84%9D-%EA%B8%B0%EC%A4%80\" aria-label=\"알고리즘의 분석 기준 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘의 분석 기준</h2>\n<p>알고리즘의 성능을 분석하는 판단 기준에는 정확성, 명확성, 수행량, 메모리 사용량, 최적성 등이 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">정확성 : 자료 입력 시 유한한 시간 내에 올바른 결과를 출력</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">명확성 : 알고리즘의 표현이 이해하기 쉽고 명확하게 작성</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">수행량 : 일반적인 연산을 제외하고 알고리즘의 특성을 나타내는 중요 연산을 분석</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">메모리 사용량 : 명령어, 변수, 입출력 자료와 정보를 저장하기 위한 메모리 사용 정도 판단</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">최적성 : 사용 환경에 따른 수행량과 메모리 사용량 변화에 대한 최적화를 판단</span></span></code></pre>\n<p>이러한 기준을 바탕으로 알고리즘을 분석하는 방법에는 실행에 필요한 공간적 측면에서 분석하는 공간 복잡도, 소요 시간 측면의 시간 복잡도가 있다. 이 포스팅에서는 시간 복잡도를 나타내는 Big-O(빅오) 표기법과 간단한 예제들을 다룬다.</p>\n<h2 id=\"big-o빅오-표기법\" style=\"position:relative;\"><a href=\"#big-o%EB%B9%85%EC%98%A4-%ED%91%9C%EA%B8%B0%EB%B2%95\" aria-label=\"big o빅오 표기법 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Big-O(빅오) 표기법</h2>\n<p>시간 복잡도 함수에서 불필요한 정보를 제거하여 알고리즘 분석을 쉽게 할 목적으로 시간 복잡도를 표시하는 방법을 <strong>Big-O(빅오) 표기법</strong>이라고 한다. Big-O에서는 최악의 상황을 가정하여 연산 횟수를 짐작한다.</p>\n<h3 id=\"1️-o1--constant-time\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F-o1--constant-time\" aria-label=\"1️ o1  constant time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ O(1) : Constant Time</h3>\n<p>입력 데이터의 크기에 상관없이 일정한 시간이 걸린다면 <strong>O(1)의 시간 복잡도를 가진 알고리즘(Constant Time)</strong>이라고 한다. 어떤 배열이 있다고 할 경우, 배열의 길이와 상관없이 해당 index에 접근해 즉시 값을 얻을 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// C</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">] </span><span class=\"mtk9\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span><span class=\"mtk7\">2</span><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">arr</span><span class=\"mtk9\">[]</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">main</span><span class=\"mtk1\">(</span><span class=\"mtk9\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(arr);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Javascript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">arr</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk4\">index</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">arr</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk4\">arr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk4\">arr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk4\">arr</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">))</span></span></span></code></pre>\n<h3 id=\"2️-olog-n--logarithmic-time\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F-olog-n--logarithmic-time\" aria-label=\"2️ olog n  logarithmic time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2️⃣ O(log n) : Logarithmic Time</h3>\n<p>O(log n)은 <strong>로그 복잡도(Logarithmic Time)</strong>라고 부르며, Big-O표기법중 O(1) 다음으로 가장 빠르다.<br>\n다음 코드는 <code>i = i * 2</code> 에 의해 1, 2, 4, 8, 16 ...인 2의 거듭제곱으로 증가한다. 이는 log2 N번 연산하므로, 시간 복잡도는 O(log n)이다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// C</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk9\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">while</span><span class=\"mtk1\">(i </span><span class=\"mtk9\">&lt;</span><span class=\"mtk1\"> n){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, i);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        i </span><span class=\"mtk9\">=</span><span class=\"mtk1\"> i </span><span class=\"mtk9\">*</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">main</span><span class=\"mtk1\">(</span><span class=\"mtk9\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Javascript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">n</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">i</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">*</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">20</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><strong>이진 탐색(Binary Search)</strong>의 경우 또한 O(log n)의 시간 복잡도를 가진다. 찾고자 하는 값을 정렬된 배열의 중간 값과 비교하여 절반을 탐색 대상에서 제외시키기 때문이다.</p>\n<img alt=\"bs\" width=\"100%\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230224/bs.gif\">\n<h3 id=\"3️-on--linear-time\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F-on--linear-time\" aria-label=\"3️ on  linear time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3️⃣ O(n) : Linear Time</h3>\n<p>입력 데이터의 크기에 비례해서 처리시간이 늘어나는 경우 <strong>O(n)</strong>이다. 입력된 값이 1일 때의 시간이 1초 걸린다면, 입력된 값이 100일 때 100초일 것이다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// C</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i</span><span class=\"mtk9\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk9\">&lt;</span><span class=\"mtk1\"> n; i</span><span class=\"mtk9\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, i);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">main</span><span class=\"mtk1\">(</span><span class=\"mtk9\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Javascript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">arr</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk6\">&quot;a&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk6\">&quot;b&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk6\">&quot;c&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk6\">&quot;d&quot;</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printArr</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">arr</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk6\">`arr[</span><span class=\"mtk9\">${</span><span class=\"mtk4\">i</span><span class=\"mtk9\">}</span><span class=\"mtk6\">] = </span><span class=\"mtk9\">${</span><span class=\"mtk4\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk4\">i</span><span class=\"mtk1\">]</span><span class=\"mtk9\">}</span><span class=\"mtk6\">`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">printArr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"4️-on-log-n--linearithmic-time\" style=\"position:relative;\"><a href=\"#4%EF%B8%8F-on-log-n--linearithmic-time\" aria-label=\"4️ on log n  linearithmic time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4️⃣ O(n log n) : Linearithmic Time</h3>\n<p>위에서 다룬 O(log n)의 시간복잡도를 가진 while문에 for문이 중첩된 구조이다. for문의 반복횟수는 n에 비례하는 반면, while문의 반복횟수는 log n에 비례한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// C</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i</span><span class=\"mtk9\">=</span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i</span><span class=\"mtk9\">&lt;</span><span class=\"mtk1\">n; i</span><span class=\"mtk9\">++</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> j</span><span class=\"mtk9\">=</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">while</span><span class=\"mtk1\">(j</span><span class=\"mtk9\">&lt;</span><span class=\"mtk1\">n){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk6\"> </span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">,i,j);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            j </span><span class=\"mtk9\">=</span><span class=\"mtk1\"> j </span><span class=\"mtk9\">*</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">main</span><span class=\"mtk1\">(</span><span class=\"mtk9\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Javascript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">n</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">n</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk6\">`</span><span class=\"mtk9\">${</span><span class=\"mtk4\">i</span><span class=\"mtk9\">}</span><span class=\"mtk6\"> x </span><span class=\"mtk9\">${</span><span class=\"mtk4\">j</span><span class=\"mtk9\">}</span><span class=\"mtk6\"> = </span><span class=\"mtk9\">${</span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">j</span><span class=\"mtk9\">}</span><span class=\"mtk6\">`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">*</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"5️-on2--quadratic-time\" style=\"position:relative;\"><a href=\"#5%EF%B8%8F-on2--quadratic-time\" aria-label=\"5️ on2  quadratic time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5️⃣ O(n^2) : Quadratic Time</h3>\n<p>이중 for문을 돌면서 수행하는 알고리즘은 <strong>O(n^2)</strong>의 시간 복잡도를 갖는다. 입력 데이터가 증가함에 따라 시간이 n의 제곱수의 비율로 증가한다. 2 이상의 제곱이 주어져도 영향력이 미비하기 때문에 통상적으로 O(n^2)으로 표시한다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// C</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i</span><span class=\"mtk9\">=</span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i</span><span class=\"mtk9\">&lt;=</span><span class=\"mtk1\">n; i</span><span class=\"mtk9\">++</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">for</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> j</span><span class=\"mtk9\">=</span><span class=\"mtk7\">1</span><span class=\"mtk1\">; j</span><span class=\"mtk9\">&lt;=</span><span class=\"mtk1\">n</span><span class=\"mtk9\">*</span><span class=\"mtk7\">2</span><span class=\"mtk1\">; j</span><span class=\"mtk9\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">printf</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;</span><span class=\"mtk7\">%d</span><span class=\"mtk6\"> </span><span class=\"mtk7\">%d</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">&quot;</span><span class=\"mtk1\">, i, j);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">main</span><span class=\"mtk1\">(</span><span class=\"mtk9\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">printNum</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Javascript</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">multiplication</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">m</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">n</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk4\">j</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">m</span><span class=\"mtk1\">; </span><span class=\"mtk4\">j</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk6\">`</span><span class=\"mtk9\">${</span><span class=\"mtk4\">i</span><span class=\"mtk9\">}</span><span class=\"mtk6\"> x </span><span class=\"mtk9\">${</span><span class=\"mtk4\">j</span><span class=\"mtk9\">}</span><span class=\"mtk6\"> = </span><span class=\"mtk9\">${</span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">*</span><span class=\"mtk1\"> </span><span class=\"mtk4\">j</span><span class=\"mtk9\">}</span><span class=\"mtk6\">`</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">multiplication</span><span class=\"mtk1\">(</span><span class=\"mtk7\">9</span><span class=\"mtk1\">, </span><span class=\"mtk7\">9</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"6️-o2n--exponential-time\" style=\"position:relative;\"><a href=\"#6%EF%B8%8F-o2n--exponential-time\" aria-label=\"6️ o2n  exponential time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6️⃣ O(2n) : Exponential Time</h3>\n<p><strong>O(2n)</strong>은 Big-O(빅오) 표기법 중에서 O(n!)을 제외한다면 가장 느리며, 입력 데이터가 어느 정도 커지면 소요 시간은 무한대에 가까워질 수 있다. 대표적으로 재귀적 수행을 하는 <strong>피보나치 수열</strong>이 있다.</p>\n<p><a href=\"https://www.acmicpc.net/problem/10870\" target=\"_blank\" rel=\"noopener noreferrer\">10870번: 피보나치 수 5 | Baekjoon Online Judge</a></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fibonacci</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">input</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">==</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">==</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fibonacci</span><span class=\"mtk1\">(</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">-</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fibonacci</span><span class=\"mtk1\">(</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">-</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk3\">fibonacci</span><span class=\"mtk1\">(</span><span class=\"mtk4\">input</span><span class=\"mtk1\">))</span></span></span></code></pre>\n<h3 id=\"7️-on--factorial-time\" style=\"position:relative;\"><a href=\"#7%EF%B8%8F-on--factorial-time\" aria-label=\"7️ on  factorial time permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7️⃣ O(n!) : Factorial Time</h3>\n<p>Big O 최악의 런타임이다. 입력 데이터의 원소들로 만들 수 있는 모든 순열을 생성한다.<br>\n다음 코드는 Factorial Time에 대한 정의이다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk3\">nFacRuntimeFunc</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">n</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">for</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i</span><span class=\"mtk9\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i</span><span class=\"mtk9\">&lt;</span><span class=\"mtk1\">n; i</span><span class=\"mtk9\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">nFacRuntimeFunc</span><span class=\"mtk1\">(n</span><span class=\"mtk9\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"시간-복잡도-그래프\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84\" aria-label=\"시간 복잡도 그래프 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간 복잡도 그래프</h2>\n<p>속도는 <code>O(1)</code> <code>O(log N)</code> <code>O(N)</code> <code>O(N log N)</code> <code>O(N^2)</code> <code>O(2^N)</code> <code>O(N!)</code> 순서대로 빠르다.</p>\n<p><img src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/230224/bigochart.png\" alt=\"bigochart\"></p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://www.acmicpc.net/\" target=\"_blank\" rel=\"noopener noreferrer\">Baekjoon Online Judge</a></p>\n<p><a href=\"https://levelup.gitconnected.com/time-complexity-and-bigo-notation-linear-time-constant-time-and-quadratic-time-686c279ecd88\" target=\"_blank\" rel=\"noopener noreferrer\">Time Complexity and BigO Notation... | by Sebastian De Lima</a></p>\n<p><a href=\"https://www.bigocheatsheet.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Big-O Algorithm Complexity Cheat Sheet (Know Thy Complexities!) @ericdrowell</a></p>\n<p><a href=\"https://overcome-the-limits.tistory.com/entry/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-with-JavaScript\" target=\"_blank\" rel=\"noopener noreferrer\">[자료구조] 시간복잡도 with JavaScript</a></p>\n<p><a href=\"https://insight-bgh.tistory.com/505\" target=\"_blank\" rel=\"noopener noreferrer\">[Algorithm] 시간 복잡도(Time Complexity) - 2WEEKS</a></p>\n<p><a href=\"https://jongbeom-dev.tistory.com/159\" target=\"_blank\" rel=\"noopener noreferrer\">알고리즘 복잡도와 빅 오 표기법 :: 비전공 개발자</a></p>\n<p><a href=\"https://yoongrammer.tistory.com/75\" target=\"_blank\" rel=\"noopener noreferrer\">이진 탐색 (Binary search) 개념 및 구현</a></p>\n<p><a href=\"https://velog.io/@kimdukbae/%EC%9D%B4%EB%B6%84-%ED%83%90%EC%83%89-%EC%9D%B4%EC%A7%84-%ED%83%90%EC%83%89-Binary-Search\" target=\"_blank\" rel=\"noopener noreferrer\">[알고리즘] 이분 탐색 / 이진 탐색 (Binary Search)</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Algorithm/230224/#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EB%B6%84%EC%84%9D-%EA%B8%B0%EC%A4%80\">알고리즘의 분석 기준</a></li>\n<li>\n<p><a href=\"/Algorithm/230224/#big-o%EB%B9%85%EC%98%A4-%ED%91%9C%EA%B8%B0%EB%B2%95\">Big-O(빅오) 표기법</a></p>\n<ul>\n<li><a href=\"/Algorithm/230224/#1%EF%B8%8F-o1--constant-time\">1️⃣ O(1) : Constant Time</a></li>\n<li><a href=\"/Algorithm/230224/#2%EF%B8%8F-olog-n--logarithmic-time\">2️⃣ O(log n) : Logarithmic Time</a></li>\n<li><a href=\"/Algorithm/230224/#3%EF%B8%8F-on--linear-time\">3️⃣ O(n) : Linear Time</a></li>\n<li><a href=\"/Algorithm/230224/#4%EF%B8%8F-on-log-n--linearithmic-time\">4️⃣ O(n log n) : Linearithmic Time</a></li>\n<li><a href=\"/Algorithm/230224/#5%EF%B8%8F-on2--quadratic-time\">5️⃣ O(n^2) : Quadratic Time</a></li>\n<li><a href=\"/Algorithm/230224/#6%EF%B8%8F-o2n--exponential-time\">6️⃣ O(2n) : Exponential Time</a></li>\n<li><a href=\"/Algorithm/230224/#7%EF%B8%8F-on--factorial-time\">7️⃣ O(n!) : Factorial Time</a></li>\n</ul>\n</li>\n<li><a href=\"/Algorithm/230224/#%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84\">시간 복잡도 그래프</a></li>\n<li><a href=\"/Algorithm/230224/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2023년 02월 24일","title":"시간 복잡도, Big-O(빅오) 표기법","tags":["Algorithm","C","Javascript"]}}},"pageContext":{"slug":"/Algorithm/230224/","previous":{"fields":{"slug":"/React/230214/"},"frontmatter":{"title":"React-Quill Editor 이미지 처리하기 (Firebase Storage)"}},"next":{"fields":{"slug":"/Computer Science/230312/"},"frontmatter":{"title":"클라우드 서비스 IaaS, PaaS, SaaS"}}}},"staticQueryHashes":["1081905842","3911196313"]}