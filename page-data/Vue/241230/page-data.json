{"componentChunkName":"component---src-templates-blog-post-js","path":"/Vue/241230/","result":{"data":{"site":{"siteMetadata":{"author":"yhuj79","comment":{"utterances":"yhuj79/blog-comments"},"sponsor":{"buyMeACoffeeId":"yhuj79"}}},"markdownRemark":{"excerpt":"데이터 바인딩은 화면상에 보여지는 데이터(View)와 브라우저 메모리에 있는 데이터(Model)를 묶어서(Binding) 서로 간의 데이터를 동기화하는 것을 말한다. 일반적으로 React에서는 단방향, Vue에서는 양방향 데이터 바인딩을 따른다. 단방향 데이터 바인딩 단방향 데이터 바인딩은 데이터가 단일 방향으로 흐르는 방식을 말한다. JavaScript…","html":"<blockquote>\n<p>데이터 바인딩은 화면상에 보여지는 데이터(View)와 브라우저 메모리에 있는 데이터(Model)를 묶어서(Binding) 서로 간의 데이터를 동기화하는 것을 말한다. 일반적으로 React에서는 단방향, Vue에서는 양방향 데이터 바인딩을 따른다.</p>\n</blockquote>\n<h2 id=\"단방향-데이터-바인딩\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"단방향 데이터 바인딩 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단방향 데이터 바인딩</h2>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img alt=\"one-way-1\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241230/one-way-1.png\" width=\"60%\">\n    <img alt=\"one-way-2\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241230/one-way-2.png\" width=\"40%\">\n</div>\n<p><strong>단방향 데이터 바인딩</strong>은 데이터가 단일 방향으로 흐르는 방식을 말한다. JavaScript 데이터(Model)가 HTML(View)로만 전달되며, 반대로 HTML에서 JavaScript로 직접적인 데이터 갱신은 불가능하다. 이는 컴포넌트 계층 구조에서도 부모에서 자식으로만 데이터가 전달되는 구조로 이루어진다.</p>\n<p>React는 단방향 데이터 바인딩 방식을 따르는 대표적인 프레임워크이다. React의 state와 props를 사용하여 부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달한다. state는 컴포넌트 내부에서 관리되는 데이터이며, 이를 변경하면 React는 자동으로 렌더링을 한다. 반면 props는 부모에서 자식으로 전달되는 읽기 전용 데이터로, 데이터 흐름이 항상 부모에서 자식으로만 이루어진다.</p>\n<p><strong>장점</strong></p>\n<ul>\n<li>코드의 이해가 쉽고, 데이터 흐름이 명확하다.</li>\n<li>데이터의 변경이 발생했을 때 DOM 객체 전체를 렌더링하지 않아 효율적인 성능이 나올 수 있다.</li>\n<li>디버깅과 데이터 추적이 쉽다.</li>\n</ul>\n<p><strong>단점</strong></p>\n<ul>\n<li>사용자의 입력이나 UI의 변경에 따라 데이터를 갱신해야 할 경우, 이벤트 핸들러를 통해 데이터를 직접 업데이트해야 하므로 추가 코드를 작성해야 한다.</li>\n</ul>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">App</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk11\">message</span><span class=\"mtk1\">, </span><span class=\"mtk11\">setMessage</span><span class=\"mtk1\">] </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useState</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;Hello, World!&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">{</span><span class=\"mtk4\">message</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;</span><span class=\"mtk4\">button</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">onClick</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk1\">() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">setMessage</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;Hello, React!&quot;</span><span class=\"mtk1\">)</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        Change Message</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      &lt;/</span><span class=\"mtk4\">button</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>위 코드에서 message는 React의 state로 관리되며, setMessage를 호출하여 상태를 변경하면 React는 자동으로 UI를 갱신한다. 이것이 단방향 데이터 흐름의 작동 방식이다.</p>\n<h2 id=\"양방향-데이터-바인딩\" style=\"position:relative;\"><a href=\"#%EC%96%91%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"양방향 데이터 바인딩 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>양방향 데이터 바인딩</h2>\n<img alt=\"two-way\" src=\"https://raw.githubusercontent.com/yhuj79/blog-assets/main/241230/two-way.png\" width=\"100%\">\n<p><strong>양방향 데이터 바인딩</strong>은 JavaScript(Model)와 HTML(View) 사이에 데이터가 양방향으로 동기화되는 방식이다. 즉, 데이터가 변경되면 UI가 갱신되고, UI의 입력 변경 또한 데이터에 반영된다. Vue.js는 <strong>v-model</strong> 디렉티브를 통해 이러한 양방향 데이터 바인딩을 제공한다.</p>\n<p><strong>장점</strong></p>\n<ul>\n<li>핸들러 코드와 같은 부가적인 케이스를 줄일 수 있기에 코드 양이 줄어든다.</li>\n<li>복잡한 사용자 입력 처리를 단순화할 수 있다.</li>\n<li>유지보수와 확장이 용이하다.</li>\n</ul>\n<p><strong>단점</strong></p>\n<ul>\n<li>데이터 변경을 프레임워크가 감지하고 DOM에 반영하는 과정에서 성능 저하가 발생할 수 있다.</li>\n<li>데이터 흐름이 복잡해질 경우, 디버깅이 어려울 수 있다.</li>\n</ul>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">template</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">label</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">for</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;message&quot;</span><span class=\"mtk1\">&gt;Message:&lt;/</span><span class=\"mtk4\">label</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">v-model</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;message&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7 mtki\">id</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;message&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">{</span><span class=\"mtk1\">{ </span><span class=\"mtk4\">message</span><span class=\"mtk1\"> }</span><span class=\"mtk9\">}</span><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">template</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">script</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">export default </span><span class=\"mtk9\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">data</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    return {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">message</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;Hello, Vue!&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk4\">script</span><span class=\"mtk1\">&gt;</span></span></span></code></pre>\n<p>Vue.js에서 <strong>v-model</strong>을 사용한 양방향 데이터 바인딩의 기본적인 작동 방식이다. message라는 데이터 속성은 Vue의 반응형 시스템에 의해 관리되며, 사용자가 입력 필드에 값을 변경하면 즉시 데이터가 업데이트되고, 반대로 데이터가 변경되면 화면의 텍스트도 자동으로 갱신된다.</p>\n<p>Vue.js에는 단방향 바인딩이 아예 없는 것은 아니다. <strong>v-bind</strong>라는 단방향 바인딩 디렉티브가 존재한다. 하지만 위와 같이 간단하게 양방향으로 사용하는 것이 보편적이다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://blog.stackademic.com/unidirectional-data-flow-in-react-295c84433d6b\" target=\"_blank\" rel=\"noopener noreferrer\">Unidirectional Data Flow in React</a></p>\n<p><a href=\"https://www.geeksforgeeks.org/what-is-the-difference-between-one-way-data-flow-and-two-way-data-binding-in-vue-js\" target=\"_blank\" rel=\"noopener noreferrer\">What is the difference between one-way data flow and two-way data binding in vue.js?</a></p>\n<p><a href=\"https://velog.io/@jiyaho/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%96%91%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%99%80-%EB%8B%A8%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%99%80-%EC%9E%A5%EB%8B%A8%EC%A0%90\" target=\"_blank\" rel=\"noopener noreferrer\">데이터 바인딩 - 양방향 데이터와 단방향 데이터의 차이와 장단점</a></p>\n<p><a href=\"https://velog.io/@sunaaank/data-binding\" target=\"_blank\" rel=\"noopener noreferrer\">양방향 단방향 데이터 바인딩</a></p>\n<p><a href=\"https://adjh54.tistory.com/49\" target=\"_blank\" rel=\"noopener noreferrer\">데이터 바인딩 이해하기(단방향, 양방향 데이터 바인딩)</a></p>\n<p><a href=\"https://velog.io/@sunyoung1542/JavaScript-%EB%8B%A8%EB%B0%A9%ED%96%A5-%EC%96%91%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" target=\"_blank\" rel=\"noopener noreferrer\">단방향, 양방향 데이터 바인딩</a></p>\n<p><a href=\"https://velog.io/@falling_star3/Vue.js-%EC%96%91%EB%B0%A9%ED%96%A5-%EB%B0%94%EC%9D%B8%EB%94%A9v-model\" target=\"_blank\" rel=\"noopener noreferrer\">양방향 바인딩(v-model)</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Vue/241230/#%EB%8B%A8%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\">단방향 데이터 바인딩</a></li>\n<li><a href=\"/Vue/241230/#%EC%96%91%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\">양방향 데이터 바인딩</a></li>\n<li><a href=\"/Vue/241230/#reference\">Reference</a></li>\n</ul>","frontmatter":{"date":"2024년 12월 30일","title":"단방향 양방향 데이터 바인딩","tags":["Vue","React"]}}},"pageContext":{"slug":"/Vue/241230/","previous":{"fields":{"slug":"/Javascript/241221/"},"frontmatter":{"title":"Javascript V8 작동 원리"}},"next":{"fields":{"slug":"/Javascript/250213/"},"frontmatter":{"title":"Canvas API를 이용한 2D 그래픽 그리기"}}}},"staticQueryHashes":["1081905842","3911196313"]}